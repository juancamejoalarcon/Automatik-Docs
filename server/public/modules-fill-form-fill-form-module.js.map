{"version":3,"sources":["webpack:///./src/app/modules/fill-form/fill-form-resolver.service.ts","webpack:///./src/app/modules/fill-form/fill-form-routing.module.ts","webpack:///./src/app/modules/fill-form/fill-form.component.html","webpack:///./src/app/modules/fill-form/fill-form.component.ts","webpack:///./src/app/modules/fill-form/fill-form.module.ts"],"names":[],"mappings":"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","file":"modules-fill-form-fill-form-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Form, FormService, UserService } from '../../core';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable()\nexport class FillFormResolver implements Resolve<Form> {\n  constructor(\n    private formService: FormService,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any> {\n    // Depende de si es un nuevo form o no\n    if (!route.url.toString().includes('edit')) {\n      return this.formService.getWithView(route.params['slug'])\n      .pipe(\n        map( form => {\n          return form;\n        }),\n        catchError((err) => this.router.navigateByUrl('/')));\n    } else {\n      return this.formService.get(route.params['slug'])\n      .pipe(\n          map( form => {\n            if (this.userService.getCurrentUser().username === form.filledBy.username) {\n                // The route keeps an old value so I force the update\n                route.data = { form: form};\n                return form;\n            } else {\n              this.router.navigateByUrl('/');\n          }}),\n          catchError((err) => this.router.navigateByUrl('/')));\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FillFormComponent } from './fill-form.component';\nimport { FillFormResolver } from './fill-form-resolver.service';\nimport { AuthGuard } from '../../core';\n\nconst routes: Routes = [\n  {\n    path: ':slug',\n    component: FillFormComponent,\n  resolve: {\n    form: FillFormResolver\n  }\n},\n{\n  path: 'edit',\n  component: FillFormComponent,\n  canActivate: [AuthGuard]\n},\n{\n    path: 'edit/:slug',\n    component: FillFormComponent,\n    canActivate: [AuthGuard],\n  resolve: {\n    form: FillFormResolver\n  }\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FillFormRoutingModule { }\n","module.exports = \"<div class=\\\"sub-menu\\\">\\n    <div class=\\\"sub-menu__container sub-menu__container--fill-form\\\" #subMenu>\\n        <div class=\\\"sub-menu__left-button sub-menu__left-button--fill-form\\\">\\n            <button class=\\\"button-filled button-filled--sub-menu-fill-form icon icon-save-solid\\\"\\n            [disabled]=\\\"isSubmitting\\\" (click)=\\\"submitForm()\\\"></button>\\n            <button class=\\\"button-filled button-filled--sub-menu-fill-form icon icon-trash-alt-regular\\\"\\n            *ngIf=\\\"updatingForm\\\" [ngClass]=\\\"{disabled: isDeleting}\\\" (click)=\\\"deleteForm()\\\"></button>\\n        </div>\\n        <ul class=\\\"sub-menu__nav sub-menu__nav--fill-form\\\" (click)=\\\"topMenuNav($event)\\\">\\n            <li class=\\\"sub-menu__nav__button sub-menu__nav__button--current\\\" data-toogle=\\\"form-creator\\\">\\n                Form\\n            </li>\\n            <li class=\\\"sub-menu__nav__button\\\" data-toogle=\\\"comments\\\">\\n                Comments\\n            </li>\\n        </ul>\\n        <app-likes-button class=\\\"sub-menu__likes-views\\\" [form]=\\\"originalForm\\\"></app-likes-button>\\n    </div>\\n</div>\\n<div class=\\\"form-creator\\\" id=\\\"form-creator\\\" #formCreatorDiv>\\n    <div class=\\\"form-creator__container\\\">\\n        <div class=\\\"form-creator__fields-area\\\" id=\\\"fields-area\\\">\\n\\n            <div class=\\\"form-creator__fields-area__container\\\" #formAreaDiv>\\n                <div class=\\\"form-creator__fields-area__top\\\">\\n                    <!-- START (Step 0) -->\\n                    <div class=\\\"form-creator__fields-area__top__container\\\" *ngIf=\\\"this.currentStep === 0\\\">\\n                        <div class=\\\"form-creator__fields-area__top__author-date\\\">\\n                            <span class=\\\"form-creator__fields-area__top__author-date__author\\\">\\n                                <div class=\\\"form-creator__fields-area__top__author-date__author__image-container\\\">\\n                                    <img src=\\\"{{\\n                                        !form.author.image ? 'assets/images/avatar.jpeg' : form.author.image\\n                                    }}\\\" alt=\\\"avatar\\\">\\n                                </div>\\n                                <span [routerLink]=\\\"['/profile', form.author.username]\\\">\\n                                    {{form.author.username}}\\n                                </span>\\n                            </span>\\n                            <span class=\\\"form-creator__fields-area__top__author-date__date\\\">\\n                                <span>Last updated:</span>\\n                                {{originalForm.updatedAt | date: 'dd/MM/yyyy'}}\\n                            </span>\\n                        </div>\\n                        <div class=\\\"form-creator__fields-area__top__before-start-button\\\">\\n                            <div class=\\\"form-creator__fields-area__top__before-start-button__information-modal-icon trigger\\\"\\n                            *ngIf=\\\"form.indications !== '' && form.indications !== undefined\\\">\\n                                <span class=\\\"icon icon-info-solid\\\" (click)=\\\"toogleModal(modal)\\\"></span>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <!-- END OF START (Step 0) -->\\n                    <!-- PROGRESSBAR -->\\n                    <div class=\\\"progress-container\\\" *ngIf=\\\"this.currentStep !== 0\\\">\\n                        <div class=\\\"progress progress-large\\\">\\n                            <span [style.width]=\\\"progresBarPercentage\\\">{{progresBarPercentage}}</span>\\n                        </div>\\n                    </div>\\n                    <!-- END OF PROGRESSBAR -->\\n                </div>\\n\\n                    <!-- Input radio -->\\n                <div class=\\\"form-creator__fields-area__middle\\\">\\n                    <div class=\\\"form-creator__fields-area__middle__container\\\" *ngIf=\\\"this.currentStep === 0\\\">\\n                        <div class=\\\"form-creator__fields-area__middle__initial-screen\\\">\\n                            <h2 class=\\\"form-creator__fields-area__middle__initial-screen__form-title\\\">\\n                                {{form.title}}\\n                            </h2>\\n                            <span class=\\\"form-creator__fields-area__middle__initial-screen__description\\\">\\n                                {{form.description}}\\n                            </span>\\n                            <button class=\\\"button-filled button-filled--start-form\\\" (click)=\\\"toogleModal(modal)\\\">\\n                                Rellenar formulario\\n                            </button>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-creator__fields-area__middle__container\\\" [ngStyle]=\\\"{'display': this.currentStep !== 0 ? 'block' : 'none'}\\\">\\n                        <div *ngFor=\\\"let field of fields\\\" >\\n                            <app-input-text *ngIf=\\\"field['type'] == 'iText'\\\" [field]=\\\"field\\\"></app-input-text>\\n                            <app-input-radio-a *ngIf=\\\"field['type'] == 'iRadioA'\\\" [field]=\\\"field\\\"></app-input-radio-a>\\n                            <app-input-radio-b *ngIf=\\\"field['type'] == 'iRadioB'\\\" [field]=\\\"field\\\"></app-input-radio-b>\\n                            <!-- <app-input-radio-c *ngIf=\\\"field['type'] == 'iRadioC'\\\" [state]=\\\"state\\\" [field]=\\\"field\\\"></app-input-radio-c> -->\\n                        </div>\\n                    </div>\\n                </div>\\n                <!-- START -->\\n                <div class=\\\"form-creator__fields-area__bottom form-creator__fields-area__bottom--initial-screen\\\" *ngIf=\\\"this.currentStep === 0\\\">\\n                    <div class=\\\"form-creator__fields-area__bottom__step\\\">\\n                        <span class=\\\"icon icon-file-regular\\\"></span>\\n                        <span class=\\\"form-creator__fields-area__bottom__step__number\\\">1.</span>\\n                        <span class=\\\"form-creator__fields-area__bottom__step__description\\\">Elige un documento</span>\\n                    </div>\\n                    <div class=\\\"form-creator__fields-area__bottom__step\\\">\\n                        <span class=\\\"icon icon-list-alt-regular\\\"></span>\\n                        <span class=\\\"form-creator__fields-area__bottom__step__number\\\">2.</span>\\n                        <span class=\\\"form-creator__fields-area__bottom__step__description\\\">Rellena el formulario</span>\\n                    </div>\\n                    <div class=\\\"form-creator__fields-area__bottom__step\\\">\\n                        <span class=\\\"icon icon-print-solid\\\"></span>\\n                        <span class=\\\"form-creator__fields-area__bottom__step__number\\\">3.</span>\\n                        <span class=\\\"form-creator__fields-area__bottom__step__description\\\">Guárdalo e imprímelo</span>\\n                    </div>\\n                </div>\\n                <!-- END OF START -->\\n                <div class=\\\"form-creator__fields-area__bottom\\\" *ngIf=\\\"this.currentStep !== 0\\\">\\n                    <div class=\\\"form-creator__fields-area__bottom__container\\\">\\n                        <div class=\\\"form-creator__fields-area__bottom__arrow-button\\\" \\n                            *ngIf=\\\"this.form.fields.length >= 2 && currentStep !== 0\\\"(click)=\\\"setCurrentStep(currentStep - 1)\\\">\\n                            <span class=\\\"icon icon-chevron-left-solid\\\"></span>\\n                            <span class=\\\"form-creator__fields-area__bottom__arrow-button__label\\\">Anterior</span>\\n                        </div>\\n                        <div class=\\\"form-creator__fields-area__bottom__arrow-button\\\" (click)=\\\"nextStepAfterValidate()\\\" \\n                            *ngIf=\\\"this.form.fields.length >= 2 && currentStep !== this.form.fields.length\\\">\\n                            <span class=\\\"form-creator__fields-area__bottom__arrow-button__label\\\">Siguiente</span>\\n                            <span class=\\\"icon icon-chevron-right-solid\\\"></span>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-creator__text-area\\\" id=\\\"text-area\\\"\\n        [ngClass]=\\\"{'form-creator__text-area--quill-text': this.form.documentType === 'plain'}\\\">\\n            <!-- Create the editor container -->\\n            <div class=\\\"form-creator__text-area__quill-text-result\\\"  id=\\\"editor-preview\\\" #formBasedDocDiv\\n            *ngIf=\\\"this.form.documentType === 'plain'\\\">\\n                {{generatedText}}\\n            </div>\\n            <!-- Office document -->\\n            <div id=\\\"wodoformbaseddocs\\\" style=\\\"width:100%; height:100%; margin:0px; padding:0px\\\" *ngIf=\\\"this.form.documentType === 'office'\\\">\\n                <div id=\\\"editorContainer\\\" style=\\\"width:100%; height:100%; margin:0px; padding:0px\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div id=\\\"comments\\\" style=\\\"display: none\\\">\\n    <div class=\\\"comments\\\">\\n        <app-comments class=\\\"comments__container\\\" [form]=\\\"originalForm\\\"\\n        *ngIf=\\\"originalForm.title !== ''\\\"></app-comments>\\n    </div>\\n</div>\\n\\n<div class=\\\"modal\\\" #modal>\\n    <div class=\\\"modal__content modal__content--privacy\\\">\\n        <div class=\\\"modal__content__top modal__content__top--privacy\\\">\\n            <h2>Indicaciones antes de comenzar el formulario</h2>\\n        </div>\\n        <div class=\\\"modal__content__modal-middle modal__content__modal-middle--privacy\\\" id=\\\"modal-middle-privacy\\\">\\n            <div class=\\\"modal__content__modal-middle__container\\\" [innerHTML]=\\\"form.indications\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"modal__content__modal-bottom modal__content__modal-bottom--privacy\\\">\\n            <button class=\\\"button-filled\\\" id=\\\"modal-button\\\" (click)=\\\"toogleModal(modal); setCurrentStep(currentStep + 1);\\\">Rellenar</button>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef, Renderer2, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { \n  Form,\n  FormService,\n  UserService,\n  CommonsService,\n  StateService,\n  OdfCreatorService,\n  PlainTextCreatorService,\n  StepModelService\n} from '../../core';\nimport { ToastrService } from 'ngx-toastr';\nimport * as screenfull from 'screenfull';\n\n@Component({\n  selector: 'app-fill-form',\n  templateUrl: './fill-form.component.html'\n})\nexport class FillFormComponent implements OnInit, OnDestroy {\n\n  @ViewChild('formAreaDiv') formAreaDiv: ElementRef;\n  @ViewChild('formBasedDocDiv') formBasedDocDiv: ElementRef;\n  @ViewChild('linkFormButton') linkFormButton: ElementRef;\n  @ViewChild('modal') modal: ElementRef;\n\n  @ViewChild('subMenu') subMenu: ElementRef;\n\n  public state: string;\n  public generatedText: any;\n  // Antes era fields: any. Estudiar si se puede usar authorForm fields\n  public fields: Array<any> = [];\n  public isDeleting = false;\n  public form: Form = new Form();\n  public originalForm: Form = new Form();\n  public errors: Object = {};\n  public isSubmitting = false;\n  public updatingForm = false;\n\n  documentType = 'office';\n  currentStep = 0;\n  public progresBarPercentage = '0%';\n  documentService: any;\n\n\n  constructor(\n    private formsService: FormService,\n    private userService: UserService,\n    private commonsService: CommonsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private odfCreatorService: OdfCreatorService,\n    private plainTextCreatorService: PlainTextCreatorService,\n    private stateService: StateService,\n    private stepModelService: StepModelService\n  ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(\n      data => {\n        const form: Form = data.form;\n        this.form = form;\n        this.fields = form.fields;\n        this.generatedText = form.text;\n        if (form.type === 'Created') {\n          this.form.originalSlug = form.slug;\n          this.updatingForm = false;\n        } else {\n          this.updatingForm = true;\n        }\n        this.updateProgressBarPercentage();\n        this.setInitialState();\n        this.setDocument();\n        this.setDivHeight();\n        window.addEventListener('resize', this.setDivHeight);\n      }\n    );\n    this.formsService.get(this.form.originalSlug).subscribe(\n      originalForm => {\n        this.originalForm = originalForm;\n      } );\n  }\n\n  ngOnDestroy() {\n    if (this.form.documentType === 'office') {\n      this.odfCreatorService.closeAndDestroyEditor();\n      this.odfCreatorService.destroyResizeDocumentContainer();\n    }\n  }\n\n  setInitialState() {\n    this.stateService.setState('fill-form');\n    this.stateService.setDocumentType(this.form.documentType);\n    this.documentType = this.form.documentType;\n  }\n\n  generateText() {\n    // Save user form settings\n    // this.form.fields = newFieldsToSave;\n  }\n\n  submitForm() {\n    // Saves author Form\n    this.isSubmitting = true;\n    this.form.type = 'Filled';\n    // post the changes\n    this.formsService\n    .save(this.form)\n    .subscribe(\n      form => {\n        this.toastr.success('Has been created', form.title, {\n          positionClass: 'toast-bottom-right',\n          progressBar: true,\n          progressAnimation: 'decreasing'\n        });\n        this.router.navigateByUrl('/fill-form/edit/' + form.slug);\n        },\n\n      err => {\n        this.errors = err;\n        this.isSubmitting = false;\n      }\n    );\n  }\n\n  deleteForm() {\n    this.isDeleting = true;\n\n    this.formsService.destroy(this.form.slug)\n      .subscribe(\n        success => {\n          this.toastr.success('Has been deleted', this.form.title, {\n            positionClass: 'toast-bottom-right',\n            progressBar: true,\n            progressAnimation: 'decreasing'\n          });\n          this.router.navigateByUrl('/');\n        }\n      );\n  }\n\n  // // UTILITY\n  setDivHeight() {\n    if (window.innerWidth > 885) {\n      if ((document.querySelector('#form-creator') as HTMLElement) !== null) {\n        const newHeight = window.innerHeight - (document.querySelector('#form-creator') as HTMLElement).offsetTop + 'px';\n        (document.querySelector('#form-creator') as HTMLElement).style.height = newHeight;\n      }\n    }\n  }\n\n  toogleModal(modal: ElementRef) {\n    this.commonsService.toggleModal(modal, false);\n  }\n\n  setDocument() {\n    this.commonsService.toggleSpinner();\n    if (this.form.documentType === 'office') {\n      this.setDivHeight();\n      window.addEventListener('resize', this.setDivHeight);\n      this.documentService = this.odfCreatorService;\n      this.documentService.init('fillForm', this.form.text, 'editorContainer').then( data => {\n        this.commonsService.toggleSpinner();\n        this.documentService.setDragAndDropForSetUp();\n        this.stepModelService.init(this.form.fields, this.documentType);\n        this.stepModelService.setInitialState();\n      });\n    } else {\n      this.documentService = this.plainTextCreatorService;\n      this.documentService.init('editor-container', 'editor-preview');\n      this.documentService.setQuillText(this.form.text);\n      this.setDivHeight();\n      window.addEventListener('resize', this.setDivHeight);\n      this.stepModelService.init(this.form.fields, this.documentType);\n      // this.stepModelService.setInitialState();\n      this.commonsService.toggleSpinner();\n    }\n  }\n\n  topMenuNav(e: any) {\n    this.commonsService.subMenuNav(e, this.subMenu.nativeElement);\n  }\n\n  setCurrentStep(stepNum: number) {\n    this.currentStep = stepNum;\n    this.formAreaDiv.nativeElement.querySelectorAll('.form-creator__fields-area__field').forEach((step: any, index: number) => {\n      if (this.currentStep === index + 1) {\n        step.style.display = 'block';\n      } else {\n        step.style.display = 'none';\n      }\n    });\n    this.updateProgressBarPercentage();\n  }\n\n  nextStepAfterValidate() {\n    const currentStep = this.form.fields[this.currentStep - 1];\n    if (currentStep['mandatory']) {\n      if (currentStep['type'] === 'iText') {\n        if (currentStep['replacement'] === '') {\n          this.commonsService.toastMessage('error', 'Validation error', 'This field is mandatory');\n        } else {\n          this.setCurrentStep(this.currentStep + 1);\n        }\n      }\n    } else {\n      this.setCurrentStep(this.currentStep + 1);\n    }\n  }\n\n  updateProgressBarPercentage() {\n    this.progresBarPercentage = Math.round(((this.currentStep / this.form.fields.length) * 100)) + '%';\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../shared';\n\nimport { FillFormRoutingModule } from './fill-form-routing.module';\nimport { FillFormComponent } from './fill-form.component';\nimport { FillFormResolver } from './fill-form-resolver.service';\n\n@NgModule({\n  declarations: [FillFormComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    FillFormRoutingModule\n  ],\n  providers: [\n    FillFormResolver\n  ]\n})\nexport class FillFormModule { }\n"],"sourceRoot":""}