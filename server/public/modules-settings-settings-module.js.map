{"version":3,"sources":["webpack:///./src/app/modules/settings/settings-routing.module.ts","webpack:///./src/app/modules/settings/settings.component.html","webpack:///./src/app/modules/settings/settings.component.ts","webpack:///./src/app/modules/settings/settings.module.ts"],"names":[],"mappings":"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","file":"modules-settings-settings-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SettingsComponent } from './settings.component';\nimport { AuthGuard } from '../../core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","module.exports = \"<div class=\\\"sub-menu\\\">\\n    <div class=\\\"sub-menu__container\\\">\\n        <ul class=\\\"sub-menu__nav sub-menu__nav--my-forms\\\" style=\\\"justify-content: center;\\\">\\n            <li class=\\\"sub-menu__nav__button sub-menu__nav__button--without-hover\\\">\\n                {{user.username}}\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\\n<div class=\\\"settings\\\">\\n    <app-list-errors [errors]=\\\"errors\\\"></app-list-errors>\\n    <form class=\\\"settings__container\\\" [formGroup]=\\\"settingsForm\\\" (ngSubmit)=\\\"submitForm()\\\">\\n        <div class=\\\"settings__profile-image\\\">\\n            <div class=\\\"settings__profile-image__container\\\">\\n                <div class=\\\"settings__profile__image__img\\\">\\n                    <img src=\\\"{{user.image}}\\\" alt=\\\"profile image\\\" #imageSrc>\\n                </div>\\n                <fieldset class=\\\"settings__profile__image__input\\\">\\n                    <label class=\\\"input-file\\\">\\n                        Cambiar imagen de perfil\\n                        <input type=\\\"file\\\" name=\\\"profile-image\\\" (change)=\\\"onFileChange($event)\\\">\\n                    </label>\\n                </fieldset>\\n            </div>\\n        </div>\\n        <div class=\\\"settings__form\\\">\\n            <div class=\\\"settings__form__container\\\">\\n                <fieldset class=\\\"settings__form__group\\\">\\n                    <input type=\\\"text\\\" placeholder=\\\"Nombre de usuario\\\" formControlName=\\\"username\\\">\\n                    <input type=\\\"text\\\" placeholder=\\\"Nombre y apellidos\\\" formControlName=\\\"nameAndSurname\\\">\\n                    <input type=\\\"text\\\" placeholder=\\\"Corren electrónico\\\" formControlName=\\\"email\\\">\\n                </fieldset>\\n                <fieldset class=\\\"settings__form__group\\\">\\n                    <textarea name=\\\"description\\\" cols=\\\"30\\\" rows=\\\"10\\\"\\n                    placeholder=\\\"Description\\\" formControlName=\\\"description\\\"></textarea>\\n                    <input type=\\\"date\\\" placeholder=\\\"Fecha de nacimiento\\\" formControlName=\\\"dateOfBirth\\\">\\n                    <input type=\\\"text\\\" placeholder=\\\"Empresa\\\" formControlName=\\\"companyName\\\">\\n                    <input type=\\\"text\\\" placeholder=\\\"Contacto\\\" formControlName=\\\"contactInformation\\\">\\n                </fieldset>\\n                <div class=\\\"settings__form__button-container\\\">\\n                    <button type=\\\"submit\\\" class=\\\"button-filled icon icon-save-solid\\\"></button>\\n                </div>\\n            </div>\\n        </div>\\n        <hr>\\n        <div class=\\\"settings__buttons\\\">\\n            <div class=\\\"settings__buttons__container\\\">\\n                <button class=\\\"button-filled trigger\\\" type=\\\"button\\\" (click)=\\\"toggleModal()\\\">\\n                    Cambiar contraseña\\n                </button>\\n                <button class=\\\"button-filled\\\" type=\\\"button\\\" (click)=\\\"logout()\\\">\\n                    Cerrar sesión\\n                </button>\\n                <button class=\\\"button-filled\\\" type=\\\"button\\\">\\n                    Eliminar cuenta\\n                </button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\\n<div class=\\\"modal\\\" #modal>\\n    <div class=\\\"modal__content\\\" style=\\\"padding: 2rem\\\">\\n        <div class=\\\"modal__content__modal-middle modal__content__modal-middle--change-password\\\">\\n            <div class=\\\"modal__content__modal-middle__container\\\">\\n                <input type=\\\"password\\\" placeholder=\\\"Contraseña actual\\\" #oldPass>\\n                <input type=\\\"password\\\" placeholder=\\\"Contraseña nueva\\\" #newPass>\\n            </div>\\n        </div>\\n        <div class=\\\"modal__content__modal-bottom\\\">\\n            <button class=\\\"button-filled\\\"\\n            id=\\\"modal-button\\\" (click)=\\\"changePassword(this.oldPass.value, newPass.value)\\\">Guardar</button>\\n            <button class=\\\"button-filled\\\"\\n            id=\\\"modal-button\\\" (click)=\\\"toggleModal()\\\">Cancelar</button>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { User, UserService } from '../../core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n\n  @ViewChild('modal') modal: ElementRef;\n  @ViewChild('imageSrc') imageSrc: ElementRef;\n  user: User = new User();\n  settingsForm: FormGroup;\n  errors: Object = {};\n  isSubmitting: boolean = false;\n\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    // create form group using the form builder\n    this.settingsForm = this.fb.group({\n      image: '',\n      username: '',\n      email: '',\n      description: '',\n      nameAndSurname: '',\n      contactInformation: '',\n      dateOfBirth: '',\n      companyName: '',\n    });\n  }\n\n  ngOnInit() {\n    // Make a fresh copy of the current user's object to place in editable form fields\n    (<any>Object).assign(this.user, this.userService.getCurrentUser());\n    // Fill the form\n    console.log(this.user);\n    this.settingsForm.patchValue(this.user);\n  }\n\n  onFileChange(event: any) {\n    const reader = new FileReader();\n\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      const fileSize = file.size / 1024 / 1024; // in MB\n      if (this.hasExtension(event.target.value, ['.jpg', '.gif', '.png'])) {\n        if ( fileSize > 1) {\n          event.target.value = '';\n          this.toastr.error('File is bigger than 1 MB', 'Error', {\n            positionClass: 'toast-bottom-right',\n            progressBar: true,\n            progressAnimation: 'decreasing'\n          });\n        } else {\n          reader.readAsDataURL(file);\n          reader.onload = (e: any) => {\n\n            var image = new Image();\n            //Set the Base64 string return from FileReader as source.\n            image.src = e.target.result;\n            image.onload = () => {\n              if (image.height === image.width) {\n                this.settingsForm.patchValue({\n                  image: reader.result\n                });\n                this.imageSrc.nativeElement.src = reader.result;\n              } else {\n                event.target.value = '';\n                this.toastr.error('Size error width and height must be equal', 'Error', {\n                  positionClass: 'toast-bottom-right',\n                  progressBar: true,\n                  progressAnimation: 'decreasing'\n                });\n              }\n            }\n        };\n        }\n      } else {\n        event.target.value = '';\n        this.toastr.error('File must be of type jpg gif or png', 'Error', {\n          positionClass: 'toast-bottom-right',\n          progressBar: true,\n          progressAnimation: 'decreasing'\n        });\n      }\n    }\n  }\n\n  hasExtension(element, exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(element);\n  }\n\n  submitForm() {\n    this.isSubmitting = true;\n\n    // update the model\n    const updatedUser = this.validation(this.settingsForm.value);\n\n    console.log(updatedUser);\n\n    this.userService\n    .update(updatedUser)\n    .subscribe( newUser => {\n      this.toastr.success('User updated', '', {\n        positionClass: 'toast-bottom-right',\n        progressBar: true,\n        progressAnimation: 'decreasing'\n      });\n    },\n      err => {\n        this.errors = err;\n        this.isSubmitting = false;\n      }\n    );\n  }\n\n  validation(values: Object) {\n    const updatedUser = {};\n    const entries = Object.entries(values);\n    for (const [key, value] of entries) {\n      if (values[key] !== this.user[key]) {\n        updatedUser[key] = value;\n        this.user[key] = value;\n      }\n    }\n    return updatedUser;\n  }\n\n  // updateUser(values: Object) {\n  //   console.log(values);\n  //   (<any>Object).assign(this.user, values);\n  // }\n\n  toggleModal() {\n    this.modal.nativeElement.classList.toggle('show-modal');\n  }\n\n  changePassword(oldPass: string, newPass: string) {\n    if (oldPass === newPass) {\n      this.toastr.error('Old and new password are the same', '', {\n        positionClass: 'toast-bottom-right',\n        progressBar: true,\n        progressAnimation: 'decreasing'\n      });\n    } else if (oldPass === '' || newPass === '') {\n      this.toastr.error('Fields cannot be empty', '', {\n        positionClass: 'toast-bottom-right',\n        progressBar: true,\n        progressAnimation: 'decreasing'\n      });\n    } else {\n      this.userService\n      .changePassword({\n        oldPassword : oldPass,\n        newPassword : newPass,\n      })\n      .subscribe( updatedUser => {\n        if (updatedUser.invalidPassword) {\n          this.toastr.error('Current password is wrong', '', {\n            positionClass: 'toast-bottom-right',\n            progressBar: true,\n            progressAnimation: 'decreasing'\n          });\n        } else {\n          this.toggleModal();\n          this.toastr.success('User updated', '', {\n            positionClass: 'toast-bottom-right',\n            progressBar: true,\n            progressAnimation: 'decreasing'\n          });\n        }\n      },\n        err => {\n          this.errors = err;\n          this.isSubmitting = false;\n        }\n      );\n    }\n  }\n\n  logout() {\n    this.userService.purgeAuth();\n    this.router.navigateByUrl('/');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../shared';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsComponent } from './settings.component';\n\n@NgModule({\n  declarations: [SettingsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    SettingsRoutingModule\n  ]\n})\nexport class SettingsModule { }\n"],"sourceRoot":""}