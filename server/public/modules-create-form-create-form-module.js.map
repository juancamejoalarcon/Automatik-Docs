{"version":3,"sources":["webpack:///./src/app/modules/create-form/create-form-resolver.service.ts","webpack:///./src/app/modules/create-form/create-form-routing.module.ts","webpack:///./src/app/modules/create-form/create-form.component.html","webpack:///./src/app/modules/create-form/create-form.component.ts","webpack:///./src/app/modules/create-form/create-form.module.ts","webpack:///./src/app/modules/create-form/inputs-guide-components/input-radio-a-guide/input-radio-a-guide.component.html","webpack:///./src/app/modules/create-form/inputs-guide-components/input-radio-a-guide/input-radio-a-guide.component.ts","webpack:///./src/app/modules/create-form/inputs-guide-components/input-radio-b-guide/input-radio-b-guide.component.html","webpack:///./src/app/modules/create-form/inputs-guide-components/input-radio-b-guide/input-radio-b-guide.component.ts","webpack:///./src/app/modules/create-form/inputs-guide-components/input-text-guide/input-text-guide.component.html","webpack:///./src/app/modules/create-form/inputs-guide-components/input-text-guide/input-text-guide.component.ts"],"names":[],"mappings":"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","file":"modules-create-form-create-form-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { Form, FormService, UserService } from '../../core';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable()\nexport class CreateFormResolver implements Resolve<Form> {\n  constructor(\n    private formsService: FormService,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any> {\n    return this.formsService.get(route.params['slug'])\n    .pipe(\n      map( form => {\n        if (this.userService.getCurrentUser().username === form.author.username) {\n          return form;\n        } else {\n          this.router.navigateByUrl('/');\n      }}),\n      catchError((err) => this.router.navigateByUrl('/')));\n    }\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreateFormComponent } from './create-form.component';\nimport { CreateFormResolver } from './create-form-resolver.service';\nimport { AuthGuard } from '../../core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreateFormComponent,\n  },\n  {\n    path: 'edit',\n    component: CreateFormComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'edit/:slug',\n    component: CreateFormComponent,\n    canActivate: [AuthGuard],\n  resolve: {\n    form: CreateFormResolver\n  }\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CreateFormRoutingModule { }\n","module.exports = \"<div class=\\\"sub-menu\\\">\\n    <div class=\\\"sub-menu__container\\\" #subMenu>\\n        <div class=\\\"sub-menu__left-button\\\">\\n            <!-- <button routerLink=\\\"/guide\\\" class=\\\"button-filled button-filled--sub-menu\\\">Guide</button> -->\\n            <button class=\\\"button-filled button-filled--sub-menu-fill-form icon icon-save-solid\\\"\\n            [disabled]=\\\"isSubmitting\\\" (click)=\\\"submitForm()\\\"></button>\\n            <button class=\\\"button-filled button-filled--sub-menu-fill-form icon icon-trash-alt-regular\\\"\\n            *ngIf=\\\"updatingForm\\\" [ngClass]=\\\"{disabled: isDeleting}\\\" (click)=\\\"deleteForm()\\\"></button>\\n        </div>\\n        <ul class=\\\"sub-menu__nav sub-menu__nav--form\\\" (click)=\\\"topMenuNav($event)\\\">\\n            <li class=\\\"sub-menu__nav__button sub-menu__nav__button--current\\\" data-toogle=\\\"form-creator\\\" #linkFormButton>\\n                Form\\n            </li>\\n            <li class=\\\"sub-menu__nav__button\\\" data-toogle=\\\"information\\\" #linkInformationButton>\\n                Information\\n            </li>\\n            <li class=\\\"sub-menu__nav__button\\\" data-toogle=\\\"comments\\\" *ngIf=\\\"updatingForm\\\">\\n                Comments\\n            </li>\\n        </ul>\\n        <div class=\\\"sub-menu__right-button\\\">\\n            <span class=\\\"sub-menu__right-button__label\\\">Preview</span>\\n            <label class=\\\"switch\\\">\\n                <input type=\\\"checkbox\\\" (change)=\\\"preview(previewMode.checked);\\\" #previewMode>\\n                <span class=\\\"slider slider--round\\\"></span>\\n            </label>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"form-creator\\\" id=\\\"form-creator\\\" #formBasedDocDiv>\\n    <div class=\\\"form-creator__container\\\">\\n        <div class=\\\"form-creator__fields-area\\\" id=\\\"fields-area\\\">\\n            <div class=\\\"form-creator__fields-area__container\\\">\\n                \\n                <div class=\\\"form-creator__fields-area__top\\\">\\n                    <div class=\\\"form-creator__fields-area__top__container\\\">\\n                        <div>\\n                        </div>\\n                        <div class=\\\"form-creator__fields-area__top__add-question d-flex\\\" *ngIf=\\\"state === 'create-form'\\\">\\n                            Add\\n                            <span class=\\\"icon icon-plus-circle-solid\\\" (click)=\\\"toogleModal(addQuestionMenuModal, true)\\\"></span>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-creator__fields-area__middle\\\">\\n                    <div class=\\\"form-creator__fields-area__middle__container\\\" id=\\\"formAreaDiv\\\" #formAreaDiv>\\n                        <div *ngIf=\\\"updatingForm\\\">\\n                            <div *ngFor=\\\"let field of fields\\\">\\n                                <app-input-text *ngIf=\\\"field['type'] == 'iText'\\\" [field]=\\\"field\\\"></app-input-text>\\n                                <app-input-radio-a *ngIf=\\\"field['type'] == 'iRadioA'\\\" [field]=\\\"field\\\"></app-input-radio-a>\\n                                <app-input-radio-b *ngIf=\\\"field['type'] == 'iRadioB'\\\" [field]=\\\"field\\\"></app-input-radio-b>\\n                                <!-- <app-input-radio-c *ngIf=\\\"field['type'] == 'iRadioC'\\\" [state]=\\\"state\\\" [field]=\\\"field\\\"></app-input-radio-c> -->\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-creator__fields-area__bottom\\\">\\n                    <div class=\\\"pagination\\\" *ngIf=\\\"this.form.fields.length\\\">\\n                        <span class=\\\"pagination__left-icon icon icon-chevron-left-solid\\\" \\n                            *ngIf=\\\"this.form.fields.length >= 2 && currentStep !== 0\\\" (click)=\\\"setCurrentStep(currentStep - 1)\\\"></span>\\n                        <ul>\\n                            <li *ngFor=\\\"let field of this.form.fields; let i = index\\\" \\n                            [ngClass]=\\\"{'current-page': currentStep === i }\\\" (click)=\\\"setCurrentStep(i)\\\">{{i + 1}}</li>\\n                        </ul>\\n                        <span class=\\\"pagination__right-icon icon icon-chevron-right-solid\\\" \\n                            *ngIf=\\\"this.form.fields.length >= 2 && currentStep !== this.form.fields.length - 1\\\" (click)=\\\"nextStepAfterValidate()\\\"></span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-creator__text-area\\\" id=\\\"text-area\\\" \\n        [ngClass]=\\\"{'form-creator__text-area--quill-text': this.documentType === 'plain'}\\\">\\n            <!-- Office document -->\\n            <div id=\\\"wodoformbaseddocs\\\" style=\\\"width:100%; height:100%; margin:0px; padding:0px\\\" *ngIf=\\\"this.documentType === 'office'\\\">\\n                <div id=\\\"editorContainer\\\" style=\\\"width:100%; height:100%; margin:0px; padding:0px\\\">\\n                </div>\\n            </div>\\n            <!-- Plain text -->\\n            <div id=\\\"expand-editor-button\\\" class=\\\"d-none-flex\\\" (click)=\\\"enableFullScreen('editor-preview')\\\"\\n            *ngIf=\\\"this.documentType === 'plain'\\\">\\n                <span class=\\\"icon icon-expand-solid\\\"></span>\\n            </div>\\n            <div id=\\\"editor-container\\\" class=\\\"d-block\\\" #quill *ngIf=\\\"this.documentType === 'plain' && plainTextSelected\\\">\\n                <quill-editor id=\\\"editor\\\" (onContentChanged)=\\\"quillText = $event.html;\\\" \\n                            [ngModel]=\\\"quillText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" \\n                            [customOptions]=\\\"customOptions\\\" [modules]=\\\"quillModules\\\"\\n                            (onEditorCreated)=\\\"setAdditionalQuillButtons($event)\\\">\\n                </quill-editor>\\n            </div>\\n            <!-- Result -->\\n            <div class=\\\"form-creator__text-area__quill-text-result d-none\\\" id=\\\"editor-preview\\\" #textPreviewDiv\\n            *ngIf=\\\"this.documentType === 'plain'\\\">\\n                {{quillText}}\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<form [formGroup]=\\\"formGroup\\\" class=\\\"information\\\" id=\\\"information\\\" style=\\\"display: none\\\">\\n    <app-list-errors class=\\\"information-error\\\" [errors]=\\\"errors\\\"></app-list-errors>\\n    <div class=\\\"information__container\\\">\\n        <div class=\\\"information__section-left\\\">\\n            <input formControlName=\\\"title\\\" type=\\\"text\\\" placeholder=\\\"Título\\\" #title>\\n            <textarea formControlName=\\\"description\\\" name=\\\"description\\\" id=\\\"description\\\" cols=\\\"30\\\" \\n            rows=\\\"6\\\" placeholder=\\\"description\\\" #description (keyup)=validateDescription($event)></textarea>\\n            <!-- <textarea formControlName=\\\"indications\\\" name=\\\"indications\\\" id=\\\"description\\\" cols=\\\"30\\\" rows=\\\"10\\\" placeholder=\\\"indications\\\"></textarea> -->\\n            <div class=\\\"information__section-left__indications\\\">\\n                <!-- Create the editor container -->\\n                <quill-editor placeholder=\\\"Indicaciones antes de rellenar el formulario\\\" \\n                (onContentChanged)=\\\"this.form.indications = $event.html\\\"\\n                formControlName=\\\"indications\\\"\\n                [modules]=\\\"{\\n                    toolbar: [\\n                    ['bold', 'italic', 'underline', 'strike'], \\n                    [{ 'list': 'ordered'}, { 'list': 'bullet' }],\\n                    [{ 'size': ['small', false, 'large', 'huge'] }],\\n                    [{ 'direction': 'rtl' }],\\n                    ['link']]}\\\">\\n                </quill-editor>\\n            </div>\\n        </div>\\n        <div class=\\\"information__section-right\\\">\\n            <div class=\\\"information__section-right__tags\\\">\\n                <input type=\\\"text\\\" placeholder=\\\"tags\\\"\\n                [formControl]=\\\"tags\\\" (keyup.enter)=\\\"addTag()\\\">\\n                <div class=\\\"information__section-right__tags__container\\\">\\n                    <span class=\\\"tag-text\\\" *ngFor=\\\"let tag of form.tags\\\">\\n                            {{ tag }} <span class=\\\"icon icon-times-solid\\\" (click)=\\\"removeTag(tag)\\\"></span>\\n                    </span>\\n                </div>\\n            </div>\\n            <div class=\\\"information__section-right__buttons\\\">\\n                <div class=\\\"information__section-right__buttons__switch-button\\\">\\n                    <label class=\\\"switch\\\">\\n                        <input type=\\\"checkbox\\\" checked formControlName=\\\"public\\\">\\n                        <span class=\\\"slider slider--round\\\"></span>\\n                    </label>\\n                    <span class=\\\"information__section-right__buttons__switch-button__label\\\">\\n                        Hacer el formulario privado\\n                    </span>\\n                </div>\\n                <div class=\\\"information__section-right__buttons__switch-button\\\">\\n                    <label class=\\\"switch\\\">\\n                        <input type=\\\"checkbox\\\" checked formControlName=\\\"commentsEnabled\\\">\\n                        <span class=\\\"slider slider--round\\\"></span>\\n                    </label>\\n                    <span class=\\\"information__section-right__buttons__switch-button__label\\\">\\n                        Desactivar comentarios\\n                    </span>\\n                </div>\\n                <div class=\\\"information__section-right__buttons__switch-button\\\">\\n                    <label class=\\\"switch\\\">\\n                        <input type=\\\"checkbox\\\" checked formControlName=\\\"enabled\\\">\\n                        <span class=\\\"slider slider--round\\\"></span>\\n                    </label>\\n                    <span class=\\\"information__section-right__buttons__switch-button__label\\\">\\n                        Mantener el formulario inactivo\\n                    </span>\\n                </div>\\n            </div>\\n            <div class=\\\"information__section-right__notifications\\\">\\n                <span class=\\\"information__section-right__notifications__title\\\">Activar notificaciones</span>\\n                <div class=\\\"information__section-right__notifications__checkboxes\\\">\\n                    <div class=\\\"information__section-right__notifications__form-group\\\">\\n                        <label for=\\\"notifications\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" name=\\\"notifications\\\" id=\\\"notifications\\\" value=\\\"Notifications\\\" checked/>\\n                            <span>Desea que le enviemos notificaciones a su correo</span>\\n                        </label>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n<div id=\\\"comments\\\" style=\\\"display: none\\\" *ngIf=\\\"updatingForm\\\">\\n    <div class=\\\"comments\\\">\\n        <app-comments class=\\\"comments__container\\\" [form]=\\\"form\\\"></app-comments>\\n    </div>\\n</div>\\n\\n<!-- CHOOSE DOCUMENT TYPE -->\\n<div class=\\\"modal\\\" #modalChooseDocument>\\n    <div class=\\\"modal__content modal__content--choose-document-type\\\">\\n        <div class=\\\"checkout-panel\\\">\\n            <div class=\\\"checkout-panel__body checkout-panel__body--choose-document-type\\\">    \\n\\n                <div class=\\\"checkout-panel__body__document-type-selection\\\">\\n                    <div class=\\\"checkout-panel__body__document-type-selection__container\\\">\\n                        <div class=\\\"checkout-panel__body__document-type-selection__button-area\\\">\\n                            <!-- <div class=\\\"checkout-panel__body__document-type-selection__button-area__info-button\\\">\\n                                <span class=\\\"icon icon-info-circle-solid\\\"></span>\\n                            </div> -->\\n                            <div class=\\\"checkout-panel__body__document-type-selection__button-area__doc-button\\\"\\n                            (click)=\\\"this.documentType = 'office'\\\" (dblclick)=\\\"toogleModal(modalChooseDocument); setDocument('office');\\\"\\n                            [ngClass]=\\\"{'checkout-panel__body__document-type-selection__button-area__doc-button--active': this.documentType === 'office'}\\\">\\n                                <span>Office doc</span>\\n                                <small>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Delectus aliquam provident excepturi iure aut ipsum facere et id alias minima dignissimos necessitatibus nihil eaque nisi, explicabo fuga nulla perferendis impedit.</small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"checkout-panel__body__document-type-selection__button-area\\\">\\n                            <!-- <div class=\\\"checkout-panel__body__document-type-selection__button-area__info-button\\\">\\n                                <span class=\\\"icon icon-info-circle-solid\\\"></span>\\n                            </div> -->\\n                            <div class=\\\"checkout-panel__body__document-type-selection__button-area__doc-button\\\"\\n                            (click)=\\\"this.documentType = 'plain'\\\" (dblclick)=\\\"toogleModal(modalChooseDocument); setDocument('plain');\\\"\\n                            [ngClass]=\\\"{'checkout-panel__body__document-type-selection__button-area__doc-button--active': this.documentType === 'plain'}\\\">\\n                                <span>Plain text</span>\\n                                <small>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Delectus aliquam provident excepturi iure aut ipsum facere et id alias minima dignissimos necessitatibus nihil eaque nisi, explicabo fuga nulla perferendis impedit.</small>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>         \\n            <div class=\\\"checkout-panel__footer checkout-panel__footer--one-button\\\">\\n                <button class=\\\"btn next-btn\\\" (click)=\\\"toogleModal(modalChooseDocument); setDocument(this.documentType);\\\">Listo</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- ADD QUESTION MENU -->\\n<div class=\\\"modal\\\" #addQuestionMenuModal>\\n    <div class=\\\"modal__content modal__content--add-new-question\\\">\\n        <div class=\\\"modal__content__modal-middle modal__content__modal-middle--add-new-question\\\">\\n            <div class=\\\"modal__content__modal-middle__container\\\">\\n                <div class=\\\"modal__content__modal-middle__button-panel\\\">\\n                    <div class=\\\"modal__content__modal-middle__button-panel__container\\\">\\n                        <div class=\\\"modal__content__modal-middle__button-panel__row\\\">\\n                            <span class=\\\"modal__content__modal-middle__button-panel__row__label\\\">\\n                                Input text\\n                                <sup class=\\\"icon icon-info-circle-solid\\\" (click)=\\\"toggleLightbox(lightBox); currentGuide = 'input-text'\\\"></sup>\\n                            </span>\\n                            <button class=\\\"button-filled button-filled--add-new-question\\\"\\n                            (click)=\\\"injectComponent(inputs[0]); toogleModal(addQuestionMenuModal, true); setCurrentStep(this.form.fields.length - 1);\\\" >\\n                                Add\\n                                <span class=\\\"icon icon-plus-solid\\\"></span>\\n                            </button>\\n                        </div>\\n                        <div class=\\\"modal__content__modal-middle__button-panel__row\\\">\\n                            <span class=\\\"modal__content__modal-middle__button-panel__row__label\\\">\\n                                Input radio a\\n                                <sup class=\\\"icon icon-info-circle-solid\\\" (click)=\\\"toggleLightbox(lightBox); currentGuide = 'input-radio-a'\\\"></sup>\\n                            </span>\\n                            <button class=\\\"button-filled button-filled--add-new-question\\\"\\n                            (click)=\\\"injectComponent(inputs[1]); toogleModal(addQuestionMenuModal, true); setCurrentStep(this.form.fields.length - 1);\\\">\\n                                Add\\n                                <span class=\\\"icon icon-plus-solid\\\"></span>\\n                            </button>\\n                        </div>\\n                        <div class=\\\"modal__content__modal-middle__button-panel__row\\\">\\n                            <span class=\\\"modal__content__modal-middle__button-panel__row__label\\\">\\n                                Input radio b\\n                                <sup class=\\\"icon icon-info-circle-solid\\\" (click)=\\\"toggleLightbox(lightBox); currentGuide = 'input-radio-b'\\\"></sup>\\n                            </span>\\n                            <button class=\\\"button-filled button-filled--add-new-question\\\"\\n                            (click)=\\\"injectComponent(inputs[2]); toogleModal(addQuestionMenuModal, true); setCurrentStep(this.form.fields.length - 1);\\\">\\n                                Add\\n                                <span class=\\\"icon icon-plus-solid\\\"></span>\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"modal__content__modal-bottom modal__content__modal-bottom--privacy\\\">\\n                <button class=\\\"button-filled\\\" id=\\\"modal-button\\\" (click)=\\\"toogleModal(addQuestionMenuModal, true)\\\">\\n                    Cerrar\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"info-lightbox\\\" #lightBox>\\n    <span class=\\\"close-info-lightbox\\\" (click)=\\\"toggleLightbox(lightBox)\\\">&times;</span>\\n    <div class=\\\"info-lightbox__content\\\">\\n        <app-input-text-guide *ngIf=\\\"currentGuide === 'input-text'\\\"></app-input-text-guide>\\n        <app-input-radio-a-guide *ngIf=\\\"currentGuide === 'input-radio-a'\\\"></app-input-radio-a-guide>\\n        <app-input-radio-b-guide *ngIf=\\\"currentGuide === 'input-radio-b'\\\"></app-input-radio-b-guide>\\n    </div>\\n</div>\"","import { Component, OnInit, AfterViewInit, OnDestroy, AfterViewChecked, ViewChild, ElementRef, Renderer2 } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  Form,\n  FormService,\n  CommonsService,\n  ComponentInjectorService,\n  StepModelService,\n  StateService,\n  OdfCreatorService,\n  PlainTextCreatorService\n} from '../../core';\nimport { InputTextComponent,\n  InputRadioAComponent,\n  InputRadioBComponent,\n  InputRadioCComponent\n } from '../../shared';\nimport { ToastrService } from 'ngx-toastr';\n\nimport * as Sortable from 'sortablejs';\nimport * as screenfull from 'screenfull';\n\n@Component({\n  selector: 'app-create-form',\n  templateUrl: './create-form.component.html'\n})\nexport class CreateFormComponent implements OnInit, OnDestroy {\n\n  @ViewChild('quill') quill: any;\n  @ViewChild('formAreaDiv') formAreaDiv: ElementRef;\n  @ViewChild('formBasedDocDiv') formBasedDocDiv: ElementRef;\n  @ViewChild('inputsMenuDiv') inputsMenuDiv: ElementRef;\n  @ViewChild('textPreviewDiv') textPreviewDiv: ElementRef;\n  // @ViewChild('addQuestionMenuDiv') addQuestionMenuDiv: ElementRef;\n  @ViewChild('linkFormButton') linkFormButton: ElementRef;\n  @ViewChild('linkInformationButton') linkInformationButton: ElementRef;\n  @ViewChild('title') title: ElementRef;\n  @ViewChild('description') description: ElementRef;\n  @ViewChild('lightBox') lightBox: ElementRef;\n\n  // Nuevo\n  @ViewChild('modalChooseDocument') modalChooseDocument: ElementRef;\n  @ViewChild('addQuestionMenuModal') addQuestionMenuModal: ElementRef;\n  @ViewChild('subMenu') subMenu: ElementRef;\n\n\n  public inputs: Array<any> = [\n    InputTextComponent,\n    InputRadioAComponent,\n    InputRadioBComponent,\n    InputRadioCComponent];\n  public quillText = '';\n  public customOptions: any;\n  public quillModules: any;\n  public textPreview: string;\n  public injectedComponents: Array<any> = [];\n  public isButtonDisabled: boolean = false;\n  form: Form = new Form();\n  formGroup: FormGroup;\n  tags = new FormControl();\n  fields: Array<any> = [];\n  errors: Object = {};\n  isSubmitting: boolean = false;\n  updatingForm: boolean = false;\n  isDeleting = false;\n  isNewForm = false;\n  isFormValid = false;\n\n  // Nuevo\n  documentType = 'office';\n  currentStep = 0;\n  documentBodyClone: any;\n  isInPreviewMode = false;\n  reader = new FileReader();\n  documentService: any;\n  state: string;\n  plainTextSelected: boolean;\n  currentGuide: string;\n\n  constructor(\n    private componentInjectorService: ComponentInjectorService,\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private formService: FormService,\n    private commonsService: CommonsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private toastr: ToastrService,\n    private stepModelService: StepModelService,\n    private stateService: StateService,\n    private odfCreatorService: OdfCreatorService,\n    private plainTextCreatorService: PlainTextCreatorService\n\n  ) {\n    // use the FormBuilder to create a form group\n    this.formGroup = this.fb.group({\n      'title': ['', Validators.required],\n      'description': ['', Validators.required],\n      indications: '',\n      public: new FormControl(true),\n      commentsEnabled: new FormControl(true),\n      enabled: new FormControl(true)\n    });\n  }\n\n  ngOnInit() {\n    // If there's a form prefetched, load it\n    this.route.data.subscribe(\n      (data: {form: Form}) => {\n        if (data.form) {\n          console.log(data.form);\n          // this.stepModelService.init(this.form.fields, );\n          this.quillText = data.form.text;\n          this.textPreview = data.form.text;\n          this.form = data.form;\n          this.formGroup.patchValue(data.form);\n          this.fields = this.form.fields;\n          this.form.documentType = data.form.documentType;\n          this.updatingForm = true;\n          setTimeout(() => {\n              this.setCurrentStep(this.form.currentStep);\n          }, 0);\n        } else {\n          this.updatingForm = false;\n          this.toogleModal(this.modalChooseDocument.nativeElement);\n        }\n        this.setInitialState();\n        if (this.updatingForm) {\n          this.setDocument(this.form.documentType);\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.documentType === 'office') {\n      this.odfCreatorService.closeAndDestroyEditor();\n      this.odfCreatorService.destroyResizeDocumentContainer();\n      window['DOCUMENTOURL'] = false;\n    }\n  }\n\n  /***************/\n  /***NEW FORM****/\n  /***************/\n  preview(checked: boolean) {\n    if (checked) {\n      this.stateService.setState('fill-form');\n      this.documentService.setPreview(this.quillText);\n    } else {\n      this.stateService.setState('create-form');\n      this.documentService.unsetPreview();\n    }\n  }\n\n  setInitialState() {\n    this.stateService.setState('create-form');\n    this.stateService.stateSubscribe().subscribe( (state: string) => {\n      this.state = state;\n    });\n    this.stepModelService.stepsEvent.subscribe((event: string) => {\n      if (event === 'remove-step') {\n        this.setCurrentStep(this.currentStep - 1);\n        this.form.fields = this.stepModelService.getStepsModel();\n      }\n    });\n  }\n\n  setDocument(documentType: string) {\n    if (documentType === 'plain') {\n      this.plainTextSelected = true;\n    }\n    this.documentType = documentType;\n    this.form.documentType = documentType;\n    this.stateService.setDocumentType(this.documentType);\n    if (documentType === 'office') {\n      this.setDivHeight();\n      window.addEventListener('resize', this.setDivHeight);\n      this.documentService = this.odfCreatorService;\n      this.documentService.init('create-form', this.updatingForm ? this.form.text : '', 'editorContainer').then( (data: any) => {\n        this.documentService.setDragAndDropForSetUp();\n      });\n    } else {\n      this.documentService = this.plainTextCreatorService;\n      this.quillModules = this.documentService.quillModules();\n      this.customOptions = this.documentService.customOptions();\n      this.documentService.init('editor-container', 'editor-preview');\n      this.setDivHeight();\n      window.addEventListener('resize', this.setDivHeight);\n    }\n    this.stepModelService.init(this.form.fields, this.documentType);\n  }\n\n  setDivHeight() {\n    if (window.innerWidth > 885) {\n      if ((document.querySelector('#form-creator') as HTMLElement) !== null) {\n        const newHeight = window.innerHeight - (document.querySelector('#form-creator') as HTMLElement).offsetTop + 'px';\n        // const toolBarOffsetTop = (document.querySelector('.ql-toolbar') as HTMLElement).offsetTop;\n        // const toolBarOffsetHeight = (document.querySelector('.ql-toolbar') as HTMLElement).offsetHeight;\n        // const newHeightForEditor = window.innerHeight - (toolBarOffsetTop + toolBarOffsetHeight) + 'px';\n\n        (document.querySelector('#form-creator') as HTMLElement).style.height = newHeight;\n        // (document.querySelector('#editor-container') as HTMLElement).style.height = newHeightForEditor;\n      }\n    }\n  }\n\n  setCurrentStep(stepNum: number) {\n    this.currentStep = stepNum;\n    this.formAreaDiv.nativeElement.querySelectorAll('.form-creator__fields-area__field').forEach((step: any, index: number) => {\n      if (this.currentStep === index) {\n        step.style.display = 'block';\n      } else {\n        step.style.display = 'none';\n      }\n    });\n  }\n\n  nextStepAfterValidate() {\n    console.log(this.form.fields[this.currentStep]);\n    if (this.form.fields[this.currentStep]['mandatory'] && this.state === 'fill-form') {\n      if (this.form.fields[this.currentStep]['type'] === 'iText') {\n        if (this.form.fields[this.currentStep]['replacement'] === '') {\n          this.toastMessage('error', 'Validation error', 'This field is mandatory');\n        } else {\n          this.setCurrentStep(this.currentStep + 1);\n        }\n      }\n    } else {\n      this.setCurrentStep(this.currentStep + 1);\n    }\n  }\n\n  injectComponent(component: Object) {\n    this.componentInjectorService.appendComponentToBody('Component', component, 'formAreaDiv', 'formAreaDiv', 'divWhereIsDeleteButton', {});\n    this.injectedComponents = this.formAreaDiv.nativeElement.querySelectorAll('.inputCollection');\n  }\n\n  toogleModal(modal: ElementRef) {\n    this.commonsService.toggleModal(modal, false);\n  }\n\n\n  /********************/\n  /****END NEW FORM****/\n  /********************/\n\n  toastMessage(type: string, message1: string, message2: string) {\n    if (type === 'error') {\n      this.toastr.error(message1, message2, {\n        positionClass: 'toast-bottom-right',\n        progressBar: true,\n        progressAnimation: 'decreasing'\n      });\n    } else if (type === 'success') {\n      this.toastr.success(message1, message2, {\n        positionClass: 'toast-bottom-right',\n        progressBar: true,\n        progressAnimation: 'decreasing'\n      });\n    }\n  }\n\n  topMenuNav(e: any) {\n    this.commonsService.subMenuNav(e, this.subMenu.nativeElement);\n  }\n\n  setAdditionalQuillButtons() {\n    // Force check\n    setTimeout( () => { this.documentService.setAdditionalQuillButtons(this.quill.nativeElement);}, 100);\n  }\n\n  toggleLightbox(lightBox: ElementRef) {\n    this.commonsService.toggleLightbox(lightBox, false);\n  }\n\n  addTag() {\n    // retrieve tag control\n    const tag = this.tags.value;\n    // only add tag if it does not exist yet\n    if (this.form.tags.indexOf(tag) < 0) {\n      this.form.tags.push(tag);\n    }\n    // clear the input\n    this.tags.reset('');\n  }\n\n  removeTag(tagName: string) {\n    this.form.tags = this.form.tags.filter((tag) => tag !== tagName);\n  }\n\n  submitForm() {\n    if (this.validate()) {\n      // Checks if user has introduced any input, if not user cannot submit unless user is updating the form\n      if (this.injectedComponents || this.updatingForm) {\n        // saves author Form\n\n        // saves the generated text\n        if (this.documentType === 'office') {\n          if (this.state === 'fill-form') {\n            this.stateService.setState('create-form');\n            this.documentService.unsetPreview().then(() => {\n              this.documentService.getDocumentToSave().then((data: any) => {\n                this.form.text = data;\n                this.saveForm();\n              });\n            });\n          } else {\n            this.documentService.getDocumentToSave().then((data: any) => {\n              console.log(data);\n              this.form.text = data;\n              this.saveForm();\n            });\n          }\n        } else {\n          this.form.text = this.quillText;\n          this.saveForm();\n        }\n      } else {\n        alert('Form is empty');\n      }\n    }\n  }\n\n  saveForm() {\n    this.isSubmitting = true;\n    // saves current step\n    this.form.currentStep = this.currentStep;\n    // update the model\n    this.updateAuthorForm(this.formGroup.value);\n    console.log(this.form);\n\n    this.formService\n    .save(this.form)\n    .subscribe(\n      form => {\n        if (!this.updatingForm) {\n          this.toastMessage('success', 'Has been created', form.title);\n          this.router.navigateByUrl('/create-form/edit/' + form.slug);\n        } else {\n          this.toastMessage('success', 'Has been updated', form.title);\n        }\n        this.isSubmitting = false;\n      },\n      err => {\n        this.toastMessage('error', err.errors.message, 'Something went wrong');\n        this.isSubmitting = false;\n      }\n    );\n  }\n\n  updateAuthorForm(values: Object) {\n    (<any>Object).assign(this.form, values);\n  }\n\n  deleteForm() {\n    if (confirm('Are you sure you want to delete?')) {\n      this.isDeleting = true;\n      this.formService.destroy(this.form.slug)\n        .subscribe(\n          success => {\n            this.toastMessage('success', 'Has been deleted', this.form.title);\n            this.router.navigateByUrl('/');\n          }\n        );\n    }\n  }\n\n  validate() {\n    if (this.form.fields.length === 0) {\n      this.linkFormButton.nativeElement.click();\n      this.toastMessage('error', 'There are no fields in the form', 'Form empty');\n      return false;\n    }\n    if (this.formGroup.controls.title.invalid) {\n      this.isFormValid = false;\n      this.title.nativeElement.classList.add('input-error');\n      this.linkInformationButton.nativeElement.click();\n      this.toastMessage('error', 'Title is not valid', 'Form empty');\n      return false;\n    } else {\n      this.title.nativeElement.classList.remove('input-error');\n    }\n    if (this.formGroup.controls.description.invalid) {\n      this.isFormValid = false;\n      this.description.nativeElement.classList.add('input-error');\n      this.linkInformationButton.nativeElement.click();\n      this.toastMessage('error', 'Description is not valid', 'Form empty');\n      return false;\n    } else {\n      this.description.nativeElement.classList.remove('input-error');\n    }\n    return true;\n  }\n\n  validateDescription(e: any) {\n    if (e.target.value.length > 400) {\n      e.target.value = e.target.value.substring(0, 400);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../shared';\n\nimport { CreateFormRoutingModule } from './create-form-routing.module';\nimport { CreateFormComponent } from './create-form.component';\nimport { CreateFormResolver } from './create-form-resolver.service';\nimport { QuillModule } from 'ngx-quill';\nimport { InputTextGuideComponent } from './inputs-guide-components/input-text-guide/input-text-guide.component';\nimport { InputRadioAGuideComponent } from './inputs-guide-components/input-radio-a-guide/input-radio-a-guide.component';\nimport { InputRadioBGuideComponent } from './inputs-guide-components/input-radio-b-guide/input-radio-b-guide.component';\n\n\n@NgModule({\n  declarations: [CreateFormComponent, InputTextGuideComponent, InputRadioAGuideComponent, InputRadioBGuideComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CreateFormRoutingModule,\n    QuillModule.forRoot()\n  ],\n  providers: [CreateFormResolver]\n})\nexport class CreateFormModule { }\n","module.exports = \"<h1 class=\\\"info-lightbox__title\\\">Input Radio A</h1>\\n<div class=\\\"info-lightbox__description\\\">\\n    <div class=\\\"info-lightbox__description__content\\\">\\n        <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. \\n            Expedita assumenda necessitatibus veritatis? Ipsum voluptate \\n            repellendus provident aut neque quia cupiditate, sit vel maiores \\n            necessitatibus voluptas totam officiis. Ex, vero autem?</p>\\n            <iframe src=\\\"https://giphy.com/embed/STqHZn9JUT7TDOPRsV\\\" width=\\\"480\\\" height=\\\"274\\\" frameBorder=\\\"0\\\" class=\\\"giphy-embed\\\" allowFullScreen></iframe>\\n    </div>\\n</div>\\n<div class=\\\"info-lightbox__instructions\\\">\\n    <div class=\\\"info-lightbox__instructions__content\\\">\\n        <div class=\\\"info-lightbox__instructions__title\\\">\\n            <h2>How to use it</h2>\\n        </div>\\n        <div class=\\\"info-lightbox__instructions__steps\\\">\\n            <div class=\\\"info-lightbox__instructions__steps__step\\\">\\n                <p>1. Lorem ipsum dolor sit amet consectetur adipisicing elit. \\n                    Unde nihil aspernatur, omnis sapiente eveniet voluptate laudantium \\n                    enim quibusdam esse! Praesentium, sunt! Voluptate, dolor nostrum. \\n                    Ipsum numquam enim commodi perspiciatis? Dignissimos.</p>\\n                <img src=\\\"https://images.unsplash.com/photo-1485439439964-39b6b5d20d7e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1489&q=80\\\" alt=\\\"\\\">\\n            </div>\\n            <div class=\\\"info-lightbox__instructions__steps__step\\\">\\n                <p>2. Lorem ipsum dolor sit amet consectetur adipisicing elit. \\n                    Unde nihil aspernatur, omnis sapiente eveniet voluptate laudantium \\n                    enim quibusdam esse! Praesentium, sunt! Voluptate, dolor nostrum. \\n                    Ipsum numquam enim commodi perspiciatis? Dignissimos.</p>\\n                <img src=\\\"https://images.unsplash.com/photo-1485439439964-39b6b5d20d7e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1489&q=80\\\" alt=\\\"\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-input-radio-a-guide',\n  templateUrl: './input-radio-a-guide.component.html'\n})\nexport class InputRadioAGuideComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  input-radio-b-guide works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-input-radio-b-guide',\n  templateUrl: './input-radio-b-guide.component.html'\n})\nexport class InputRadioBGuideComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h1 class=\\\"info-lightbox__title\\\">Input Text</h1>\\n<div class=\\\"info-lightbox__description\\\">\\n    <div class=\\\"info-lightbox__description__content\\\">\\n        <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. \\n            Expedita assumenda necessitatibus veritatis? Ipsum voluptate \\n            repellendus provident aut neque quia cupiditate, sit vel maiores \\n            necessitatibus voluptas totam officiis. Ex, vero autem?</p>\\n            <iframe src=\\\"https://giphy.com/embed/STqHZn9JUT7TDOPRsV\\\" width=\\\"480\\\" height=\\\"274\\\" frameBorder=\\\"0\\\" class=\\\"giphy-embed\\\" allowFullScreen></iframe>\\n    </div>\\n</div>\\n<div class=\\\"info-lightbox__instructions\\\">\\n    <div class=\\\"info-lightbox__instructions__content\\\">\\n        <div class=\\\"info-lightbox__instructions__title\\\">\\n            <h2>How to use it</h2>\\n        </div>\\n        <div class=\\\"info-lightbox__instructions__steps\\\">\\n            <div class=\\\"info-lightbox__instructions__steps__step\\\">\\n                <p>1. Lorem ipsum dolor sit amet consectetur adipisicing elit. \\n                    Unde nihil aspernatur, omnis sapiente eveniet voluptate laudantium \\n                    enim quibusdam esse! Praesentium, sunt! Voluptate, dolor nostrum. \\n                    Ipsum numquam enim commodi perspiciatis? Dignissimos.</p>\\n                <img src=\\\"https://images.unsplash.com/photo-1485439439964-39b6b5d20d7e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1489&q=80\\\" alt=\\\"\\\">\\n            </div>\\n            <div class=\\\"info-lightbox__instructions__steps__step\\\">\\n                <p>2. Lorem ipsum dolor sit amet consectetur adipisicing elit. \\n                    Unde nihil aspernatur, omnis sapiente eveniet voluptate laudantium \\n                    enim quibusdam esse! Praesentium, sunt! Voluptate, dolor nostrum. \\n                    Ipsum numquam enim commodi perspiciatis? Dignissimos.</p>\\n                <img src=\\\"https://images.unsplash.com/photo-1485439439964-39b6b5d20d7e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1489&q=80\\\" alt=\\\"\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-input-text-guide',\n  templateUrl: './input-text-guide.component.html'\n})\nexport class InputTextGuideComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}