{"version":3,"sources":["webpack:///./src/app/modules/settings/settings-routing.module.ts","webpack:///./src/app/modules/settings/settings.component.html","webpack:///./src/app/modules/settings/settings.component.ts","webpack:///./src/app/modules/settings/settings.module.ts"],"names":[],"mappings":"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","file":"modules-settings-settings-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SettingsComponent } from './settings.component';\nimport { AuthGuard } from '../../core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","module.exports = \"<section id=\\\"settings\\\">\\n    <div class=\\\"settings-container\\\">\\n        \\n        <app-list-errors [errors]=\\\"errors\\\"></app-list-errors>\\n        \\n        <form [formGroup]=\\\"settingsForm\\\" class=\\\"form settings-form\\\" (ngSubmit)=\\\"submitForm()\\\">\\n            \\n            <fieldset [disabled]=\\\"isSubmitting\\\">\\n                \\n                <fieldset class=\\\"img-settings-container\\\">\\n                    <img src=\\\"{{user.image}}\\\" alt=\\\"avatar\\\">\\n                    <input type=\\\"file\\\" (change)=\\\"onFileChange($event)\\\" />\\n                </fieldset>\\n                \\n                <fieldset class=\\\"form-group-settings\\\">\\n                    <label for=\\\"name\\\"></label>\\n                    <input type=\\\"text\\\" name=\\\"name\\\" id=\\\"name\\\" \\n                        placeholder=\\\"Username\\\" formControlName=\\\"username\\\">\\n                </fieldset>\\n                \\n                <fieldset class=\\\"form-group-settings\\\">\\n                    <label for=\\\"email\\\"></label>\\n                    <input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" \\n                    placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n                </fieldset>\\n                \\n                <fieldset class=\\\"form-group-settings\\\">\\n                    <label for=\\\"description\\\"></label>\\n                    <textarea cols=\\\"70\\\" rows=\\\"5\\\" id=\\\"description\\\" \\n                    placeholder=\\\"Description\\\" formControlName=\\\"description\\\"></textarea>\\n                </fieldset>\\n                \\n                <fieldset class=\\\"form-group-settings\\\">\\n                    <label for=\\\"contact\\\"></label>\\n                    <input type=\\\"text\\\" name=\\\"contact\\\" id=\\\"contact\\\" \\n                    placeholder=\\\"Contact information\\\" formControlName=\\\"contactInformation\\\">\\n                </fieldset>\\n                \\n                <div class=\\\"submit-area\\\">\\n                    <input type=\\\"submit\\\" value=\\\"Update\\\">\\n                </div>\\n            </fieldset>\\n      </form>\\n\\n      <div class=\\\"settings-bottom-area\\\">\\n          <button (click)=\\\"toggleModal()\\\">Cambiar contraseña</button>\\n          <button (click)=\\\"logout()\\\">Cerrar sesión</button>\\n      </div>\\n\\n\\n  </div>\\n</section>\\n\\n<!-- Modal -->\\n<div class=\\\"modal\\\" #modal>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-top modal-top-change-pass\\\">\\n            <h5>Cambiar contraseña</h5>\\n        </div>\\n        <div class=\\\"modal-middle modal-middle-change-pass\\\">\\n            <input type=\\\"password\\\" placeholder=\\\"Contraseña actual\\\" #oldPass>\\n            <input type=\\\"password\\\" placeholder=\\\"Contraseña nueva\\\" #newPass>\\n        </div>\\n        <div class=\\\"modal-bottom\\\">\\n            <button class=\\\"button\\\" \\n                (click)=\\\"changePassword(this.oldPass.value, newPass.value)\\\"\\n                >Guardar</button>\\n\\n            <button class=\\\"button cancel\\\" \\n                (click)=\\\"toggleModal()\\\"\\n                >Cancelar</button>\\n\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { User, UserService } from '../../core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n\n  @ViewChild('modal') modal: ElementRef;\n  user: User = new User();\n  settingsForm: FormGroup;\n  errors: Object = {};\n  isSubmitting: boolean = false;\n\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    // create form group using the form builder\n    this.settingsForm = this.fb.group({\n      image: '',\n      username: '',\n      email: '',\n      description: '',\n      contactInformation: '',\n    });\n  }\n\n  ngOnInit() {\n    // Make a fresh copy of the current user's object to place in editable form fields\n    (<any>Object).assign(this.user, this.userService.getCurrentUser());\n    // Fill the form\n    this.settingsForm.patchValue(this.user);\n  }\n\n  onFileChange(event: any) {\n    const reader = new FileReader();\n\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      const fileSize = file.size / 1024 / 1024; // in MB\n      if (this.hasExtension(event.target.value, ['.jpg', '.gif', '.png'])) {\n        if ( fileSize > 2) {\n          event.target.value = '';\n          this.toastr.error('File is bigger than 2 MB', 'Error', {\n            positionClass: 'toast-bottom-right',\n            progressBar: true,\n            progressAnimation: 'decreasing'\n          });\n        } else {\n          reader.readAsDataURL(file);\n          reader.onload = () => {\n            this.settingsForm.patchValue({\n              image: reader.result\n            });\n        };\n        }\n      } else {\n        event.target.value = '';\n        this.toastr.error('File must be of type jpg gif or png', 'Error', {\n          positionClass: 'toast-bottom-right',\n          progressBar: true,\n          progressAnimation: 'decreasing'\n        });\n      }\n    }\n  }\n\n  hasExtension(element, exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(element);\n  }\n\n  submitForm() {\n    this.isSubmitting = true;\n\n    // update the model\n    this.updateUser(this.settingsForm.value);\n\n    this.userService\n    .update(this.user)\n    .subscribe( updatedUser => {\n      this.toastr.success('User updated', '', {\n        positionClass: 'toast-bottom-right',\n        progressBar: true,\n        progressAnimation: 'decreasing'\n      });\n    },\n      err => {\n        this.errors = err;\n        this.isSubmitting = false;\n      }\n    );\n  }\n\n  updateUser(values: Object) {\n    (<any>Object).assign(this.user, values);\n  }\n\n  toggleModal() {\n    this.modal.nativeElement.classList.toggle('show-modal');\n  }\n\n  changePassword(oldPass: string, newPass: string) {\n    if (oldPass === newPass) {\n      this.toastr.error('Old and new password are the same', '', {\n        positionClass: 'toast-bottom-right',\n        progressBar: true,\n        progressAnimation: 'decreasing'\n      });\n    } else if (oldPass === '' || newPass === '') {\n      this.toastr.error('Fields cannot be empty', '', {\n        positionClass: 'toast-bottom-right',\n        progressBar: true,\n        progressAnimation: 'decreasing'\n      });\n    } else {\n      this.userService\n      .update({\n        password : newPass\n      })\n      .subscribe( updatedUser => {\n        this.toggleModal();\n        this.toastr.success('User updated', '', {\n          positionClass: 'toast-bottom-right',\n          progressBar: true,\n          progressAnimation: 'decreasing'\n        });\n      },\n        err => {\n          this.errors = err;\n          this.isSubmitting = false;\n        }\n      );\n    }\n  }\n\n  logout() {\n    this.userService.purgeAuth();\n    this.router.navigateByUrl('/');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../shared';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsComponent } from './settings.component';\n\n@NgModule({\n  declarations: [SettingsComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    SettingsRoutingModule\n  ]\n})\nexport class SettingsModule { }\n"],"sourceRoot":""}