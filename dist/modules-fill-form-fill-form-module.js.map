{"version":3,"sources":["webpack:///./src/app/modules/fill-form/fill-form-resolver.service.ts","webpack:///./src/app/modules/fill-form/fill-form-routing.module.ts","webpack:///./src/app/modules/fill-form/fill-form.component.html","webpack:///./src/app/modules/fill-form/fill-form.component.ts","webpack:///./src/app/modules/fill-form/fill-form.module.ts","webpack:///./src/app/modules/fill-form/likes-button/likes-button.component.html","webpack:///./src/app/modules/fill-form/likes-button/likes-button.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAA2C;AACoD;AAEnC;AACX;AAGjD;IACE,0BACU,WAAwB,EACxB,MAAc,EACd,WAAwB;QAFxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;IAC/B,CAAC;IAEJ,kCAAO,GAAP,UACE,KAA6B,EAC7B,KAA0B;QAF5B,iBAyBG;QArBD,sCAAsC;QACtC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC1C,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;iBACxD,IAAI,CACH,0DAAG,CAAE,cAAI;gBACP,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,EACF,iEAAU,CAAC,UAAC,GAAG,IAAK,YAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,EAA9B,CAA8B,CAAC,CAAC,CAAC;SACxD;aAAM;YACL,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;iBAChD,IAAI,CACD,0DAAG,CAAE,cAAI;gBACP,IAAI,KAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;oBACvE,qDAAqD;oBACrD,KAAK,CAAC,IAAI,GAAG,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC;oBAC3B,OAAO,IAAI,CAAC;iBACf;qBAAM;oBACL,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;iBAClC;YAAA,CAAC,CAAC,EACH,iEAAU,CAAC,UAAC,GAAG,IAAK,YAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,EAA9B,CAA8B,CAAC,CAAC,CAAC;SACtD;IACL,CAAC;IAhCQ,gBAAgB;QAD5B,gEAAU,EAAE;+EAGY,iDAAW;YAChB,sDAAM;YACD,iDAAW;OAJvB,gBAAgB,CAiC5B;IAAD,uBAAC;CAAA;AAjC4B;;;;;;;;;;;;;;;;;;;;;;ACPY;AACc;AACG;AACM;AACzB;AAEvC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,sEAAiB;QAC9B,OAAO,EAAE;YACP,IAAI,EAAE,4EAAgB;SACvB;KACF;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,sEAAiB;QAC5B,WAAW,EAAE,CAAC,+CAAS,CAAC;KACzB;IACD;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,sEAAiB;QAC5B,WAAW,EAAE,CAAC,+CAAS,CAAC;QAC1B,OAAO,EAAE;YACP,IAAI,EAAE,4EAAgB;SACvB;KACF;CACA,CAAC;AAMF;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QAJjC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;ACjClC,whDAAwhD,sBAAsB,uQAAuQ,6CAA6C,mjBAAmjB,YAAY,4CAA4C,kBAAkB,slBAAslB,kBAAkB,snFAAsnF,eAAe,0W;;;;;;;;;;;;;;;;;;;;;;ACAzmL;AAC1C;AAC6C;AAC3D;AACF;AAMzC;IAmBE,2BACU,YAAyB,EACzB,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,MAAqB;QAJrB,iBAAY,GAAZ,YAAY,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAf/B,qEAAqE;QAC9D,WAAM,GAAe,EAAE,CAAC;QACxB,eAAU,GAAG,KAAK,CAAC;QACnB,SAAI,GAAS,IAAI,0CAAI,EAAE,CAAC;QACxB,iBAAY,GAAS,IAAI,0CAAI,EAAE,CAAC;QAChC,WAAM,GAAW,EAAE,CAAC;QACpB,iBAAY,GAAG,KAAK,CAAC;QACrB,iBAAY,GAAG,KAAK,CAAC;IASxB,CAAC;IAEL,oCAAQ,GAAR;QAAA,iBAqBC;QApBC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CACvB,cAAI;YACF,IAAM,IAAI,GAAS,IAAI,CAAC,IAAI,CAAC;YAE7B,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;YAC/B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;YAC9D,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC3B,KAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;gBACnC,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC3B;iBAAM;gBACL,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;QACH,CAAC,CACF,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CACrD,sBAAY;YACV,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACnC,CAAC,CAAE,CAAC;IACR,CAAC;IAED,2CAAe,GAAf;QAAA,iBAQC;QAPC,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACjD,yCAAyC;QAC7C,UAAU,CAAE,cAAQ,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACnE,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;YAC5D,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;IACH,CAAC;IAED,wCAAY,GAAZ;QACE,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;QAClD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACpC,0BAA0B;QAC1B,IAAM,eAAe,GAAG,EAAE,CAAC;QAE3B,KAAoB,UAAW,EAAX,SAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW,EAAE;YAA5B,IAAM,KAAK;YACd,OAAO;YACP,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;gBAC7B,IAAM,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAC1C,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAC,CAAC;gBACzD,IAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,QAAQ,CAAC,aAAa,CAAC;gBAC5F,IAAI,aAAa,SAAK,CAAC;gBACvB,IAAI,OAAO,EAAE;oBACX,aAAa,GAAG,qBAAqB,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC;iBAC5G;qBAAM;oBACN,aAAa,GAAG,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC;iBAC9F;gBACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;gBACvE,0BAA0B;gBAC1B,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC;aACzE;YACD,OAAO;YACP,mCAAmC;YACnC,+CAA+C;YAC/C,8DAA8D;YAC9D,yGAAyG;YACzG,4EAA4E;YAC5E,+BAA+B;YAC/B,6EAA6E;YAC7E,IAAI;YACJ,UAAU;YACV,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,SAAS,EAAE;gBAC/B,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;gBAC5F,sEAAsE;gBACtE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,QAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,QAAM,EAAE,CAAC,EAAE,EAAE;oBACvD,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;wBACrB,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAC,CAAC;wBACzD,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,aAAa,CAAC;wBACrD,IAAI,aAAa,SAAK,CAAC;wBACvB,IAAI,OAAO,EAAE;4BACX,aAAa,GAAG,qBAAqB,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;yBACvE;6BAAM;4BACN,aAAa,GAAG,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;yBACzD;wBACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;wBACvE,KAAK,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;wBACjC,gEAAgE;wBAChE,MAAM;qBACP;iBACF;aACF;YACD,UAAU;YACV,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,SAAS,EAAE;gBAC/B,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;gBAC5F,sEAAsE;gBACtE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,QAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,QAAM,EAAE,CAAC,EAAE,EAAE;oBACvD,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;wBACrB,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAC,CAAC;wBACzD,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,aAAa,CAAC;wBACrD,IAAI,aAAa,SAAK,CAAC;wBACvB,IAAI,OAAO,EAAE;4BACX,aAAa,GAAG,qBAAqB,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;yBACvE;6BAAM;4BACN,aAAa,GAAG,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;yBACzD;wBACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;wBACvE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;wBAClC,gEAAgE;qBACjE;yBAAM;wBACL,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;qBACpC;iBACF;aACF;YACD,UAAU;YACV,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,SAAS,EAAE;gBAC/B,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;gBAC5F,sEAAsE;gBACtE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,QAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,QAAM,EAAE,CAAC,EAAE,EAAE;oBACvD,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;oBACzF,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;wBACrB,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAC,CAAC;wBACzD,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,aAAa,CAAC;wBACrD,IAAI,aAAa,SAAK,CAAC;wBACvB,IAAI,OAAO,EAAE;4BACX,aAAa,GAAG,qBAAqB,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,GAAG,SAAS,CAAC;yBAC5F;6BAAM;4BACN,aAAa,GAAG,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,GAAG,SAAS,CAAC;yBAC9E;wBACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;wBACvE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;qBACnC;yBAAM;wBACL,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;qBACpC;iBACF;aACF;YACD,0BAA0B;YAC1B,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7B;QACD,0BAA0B;QAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC;QACnC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACvF,IAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,cAAc,EAAE;YAClB,cAAc,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;SACvD;IACH,CAAC;IAED,sCAAU,GAAV;QAAA,iBAuBC;QAtBC,oBAAoB;QACpB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QAC1B,mBAAmB;QACnB,IAAI,CAAC,YAAY;aAChB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;aACf,SAAS,CACR,cAAI;YACF,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,EAAE;gBAClD,aAAa,EAAE,oBAAoB;gBACnC,WAAW,EAAE,IAAI;gBACjB,iBAAiB,EAAE,YAAY;aAChC,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,CAAC,EAEH,aAAG;YACD,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CACF,CAAC;IACJ,CAAC;IAED,sCAAU,GAAV;QAAA,iBAcC;QAbC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;aACtC,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACvD,aAAa,EAAE,oBAAoB;gBACnC,WAAW,EAAE,IAAI;gBACjB,iBAAiB,EAAE,YAAY;aAChC,CAAC,CAAC;YACH,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC,CACF,CAAC;IACN,CAAC;IAED,UAAU;IACV,wCAAY,GAAZ;QACE,IAAI,MAAM,CAAC,UAAU,GAAG,GAAG,EAAE;YAC3B,IAAK,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAiB,KAAK,IAAI,EAAE;gBACrE,IAAM,SAAS,GAAG,MAAM,CAAC,WAAW,GAAI,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAiB,CAAC,SAAS,GAAG,IAAI,CAAC;gBACjH,6FAA6F;gBAC7F,mGAAmG;gBACnG,mGAAmG;gBAElG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAiB,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;gBACjF,QAAQ,CAAC,aAAa,CAAC,mBAAmB,CAAiB,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC;aACvF;SACF;IACH,CAAC;IAED,sCAAU,GAAV,UAAW,CAAM;QACf,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAM,SAAS,GAA4B,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,CAA4B,CAAC;QACpH,IAAM,cAAc,GAAgB,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAgB,CAAC;QACxF,IAAM,WAAW,GAA4B,QAAQ,CAAC,gBAAgB,CAAC,UAAU,CAA4B,CAAC;QAC9G,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,KAAK,GAAG,EAAE;YAC5B,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBACvC,yCAAyC;gBACzC,SAAS,CAAC,OAAO,CAAC,UAAC,MAAM;oBACrB,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACrD,CAAC,CAAC,CAAC;gBACH,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBAChD,IAAM,QAAM,GAAG,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC7C,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAChD,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;gBACnD,UAAU,CAAC;oBACP,WAAW,CAAC,OAAO,CAAC,UAAC,GAAG;wBACpB,IAAI,GAAG,CAAC,EAAE,KAAK,QAAM,EAAE;4BACnB,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;yBAC9B;6BAAM;4BACH,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;yBAC9B;oBACL,CAAC,CAAC,CAAC;oBACH,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;oBAChD,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;gBACvD,CAAC,EAAE,GAAG,CAAC,CAAC;aACX;SACJ;IACH,CAAC;IAED,uCAAW,GAAX;QACE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IAC1D,CAAC;IAED,4CAAgB,GAAhB,UAAiB,EAAU;QACzB,IAAM,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,uCAAU,IAAI,kDAAkB,EAAE;YACpC,kDAAkB,CAAC,EAAE,CAAC,CAAC;SACxB;IACH,CAAC;IArQyB;QAAzB,+DAAS,CAAC,aAAa,CAAC;wEAAc,wDAAU;0DAAC;IACpB;QAA7B,+DAAS,CAAC,iBAAiB,CAAC;wEAAkB,wDAAU;8DAAC;IAC7B;QAA5B,+DAAS,CAAC,gBAAgB,CAAC;wEAAiB,wDAAU;6DAAC;IACpC;QAAnB,+DAAS,CAAC,OAAO,CAAC;wEAAQ,wDAAU;oDAAC;IAL3B,iBAAiB;QAJ7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,uHAAyC;SAC1C,CAAC;+EAqBwB,iDAAW;YACZ,iDAAW;YACjB,8DAAc;YACb,sDAAM;YACN,wDAAa;OAxBpB,iBAAiB,CAyQ7B;IAAD,wBAAC;CAAA;AAzQ6B;;;;;;;;;;;;;;;;;;;;;;;;ACVW;AACM;AACH;AAEuB;AACT;AACM;AACa;AAa7E;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAX1B,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,sEAAiB,EAAE,yFAAoB,CAAC;YACvD,OAAO,EAAE;gBACP,4DAAY;gBACZ,oDAAY;gBACZ,+EAAqB;aACtB;YACD,SAAS,EAAE;gBACT,4EAAgB;aACjB;SACF,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpB3B,qIAAqI,GAAG,mBAAmB,0TAA0T,GAAG,mBAAmB,0GAA0G,GAAG,mBAAmB,gB;;;;;;;;;;;;;;;;;;ACAljB;AACY;AAMrE;IAGE,8BACU,YAAyB,EACzB,WAAwB;QADxB,iBAAY,GAAZ,YAAY,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,uCAAQ,GAAR,cAAY,CAAC;IAEb,uCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC9C,cAAI;YACF,KAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,0CAAW,GAAX;QAAA,iBAQC;QAPC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CACjD,cAAI;YACF,KAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1B,CAAC,CACF,CAAC;IACJ,CAAC;IA1BQ;QAAR,2DAAK,EAAE;wEAAO,0CAAI;sDAAC;IAFT,oBAAoB;QAJhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,0IAA4C;SAC7C,CAAC;+EAKwB,iDAAW;YACZ,iDAAW;OALvB,oBAAoB,CA8BhC;IAAD,2BAAC;CAAA;AA9BgC","file":"modules-fill-form-fill-form-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Form, FormService, UserService } from '../../core';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable()\nexport class FillFormResolver implements Resolve<Form> {\n  constructor(\n    private formService: FormService,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any> {\n    // Depende de si es un nuevo form o no\n    if (!route.url.toString().includes('edit')) {\n      return this.formService.getWithView(route.params['slug'])\n      .pipe(\n        map( form => {\n          return form;\n        }),\n        catchError((err) => this.router.navigateByUrl('/')));\n    } else {\n      return this.formService.get(route.params['slug'])\n      .pipe(\n          map( form => {\n            if (this.userService.getCurrentUser().username === form.filledBy.username) {\n                // The route keeps an old value so I force the update\n                route.data = { form: form};\n                return form;\n            } else {\n              this.router.navigateByUrl('/');\n          }}),\n          catchError((err) => this.router.navigateByUrl('/')));\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FillFormComponent } from './fill-form.component';\nimport { FillFormResolver } from './fill-form-resolver.service';\nimport { AuthGuard } from '../../core';\n\nconst routes: Routes = [\n  {\n    path: ':slug',\n    component: FillFormComponent,\n  resolve: {\n    form: FillFormResolver\n  }\n},\n{\n  path: 'edit',\n  component: FillFormComponent,\n  canActivate: [AuthGuard]\n},\n{\n    path: 'edit/:slug',\n    component: FillFormComponent,\n    canActivate: [AuthGuard],\n  resolve: {\n    form: FillFormResolver\n  }\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FillFormRoutingModule { }\n","module.exports = \"<div id=\\\"sub-menu\\\">\\n    <div class=\\\"sub-menu-container sub-menu-container-fill-form\\\">\\n        <ul class=\\\"sub-menu-nav\\\" (click)=\\\"topMenuNav($event)\\\">\\n            <li class=\\\"current\\\"><a href=\\\"form-creator\\\" class=\\\"sub-menu-button\\\" #linkFormButton>Form</a></li>\\n            <li><a href=\\\"comments\\\" class=\\\"sub-menu-button\\\">Comments</a></li>\\n        </ul>\\n        <app-likes-button class=\\\"likes-views\\\" [form]=\\\"originalForm\\\"></app-likes-button>\\n    </div>\\n</div>\\n<div class=\\\"container\\\">\\n    <div class=\\\"form-creator content\\\" id=\\\"form-creator\\\" #formCreatorDiv>\\n        <div class=\\\"form-creator-container\\\">\\n            <div class=\\\"fields-area\\\">\\n                    <div class=\\\"fields-container fields-container-fill-formm\\\" id=\\\"listWithHandle\\\" #formAreaDiv (keyup)=\\\"generateText()\\\" (click)=\\\"generateText()\\\">\\n                        \\n                        <!-- Information label -->\\n                        <div class=\\\"form-information-label\\\">\\n                            <div class=\\\"label-top\\\">\\n                                <div class=\\\"author-date\\\">\\n                                    <div class=\\\"author\\\">\\n                                        <div class=\\\"author-image-container\\\">\\n                                            <img src=\\\"assets/images/avatar.jpg\\\" alt=\\\"avatar\\\">\\n                                        </div>\\n                                        <span [routerLink]=\\\"['/profile', form.author.username]\\\">\\n                                            {{form.author.username}}\\n                                        </span>\\n                                    </div>\\n                                    <div class=\\\"date\\\">\\n                                        <span>Last updated:</span>\\n                                        {{originalForm.updatedAt | date: 'dd/MM/yyyy'}}\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"information-modal-icon trigger-indications\\\"\\n                                    (click)=\\\"toggleModal()\\\" *ngIf=\\\"form.indications !== '' && form.indications !== undefined\\\">\\n                                    <span class=\\\"icon icon-info-solid\\\"></span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"label-bottom\\\">\\n                                <h1>{{form.title}}</h1>\\n                                <p>{{form.description}}</p>\\n                            </div>\\n                        </div>\\n\\n                        <!-- Modal -->\\n                        <div class=\\\"modal-indications\\\" #modal>\\n                            <div class=\\\"modal-content-indications\\\">\\n                                <div class=\\\"modal-top-indications\\\">\\n                                    <h1>Indicaciones previas del autor</h1>\\n                                </div>\\n                                <div class=\\\"modal-middle-indications\\\">\\n                                    <p>\\n                                        {{form.indications}}\\n                                    </p>\\n                                </div>\\n                                <div class=\\\"modal-bottom-indications\\\">\\n                                    <button class=\\\"button close-button-indications\\\" (click)=\\\"toggleModal()\\\">Entendido</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div *ngFor=\\\"let field of fields\\\">\\n                            <app-input-text *ngIf=\\\"field['type'] == 'iText'\\\" [state]=\\\"state\\\" [field]=\\\"field\\\"></app-input-text>\\n                            <!-- <app-input-date *ngIf=\\\"field['type'] == 'iDate'\\\" [state]=\\\"state\\\" [field]=\\\"field\\\"></app-input-date> -->\\n                            <app-input-radio-a *ngIf=\\\"field['type'] == 'iRadioA'\\\" [state]=\\\"state\\\" [field]=\\\"field\\\"></app-input-radio-a>\\n                            <app-input-radio-b *ngIf=\\\"field['type'] == 'iRadioB'\\\" [state]=\\\"state\\\" [field]=\\\"field\\\"></app-input-radio-b>\\n                            <app-input-radio-c *ngIf=\\\"field['type'] == 'iRadioC'\\\" [state]=\\\"state\\\" [field]=\\\"field\\\"></app-input-radio-c>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n            <div class=\\\"text-area text-area-fill-form\\\">\\n                <!-- Create the editor container -->\\n                <div id=\\\"editor-container\\\" class=\\\"editor-fill-form \\\">\\n                    <div class=\\\"toolbar-fill-form\\\">\\n                        <!-- <span class=\\\"icon icon-file-pdf-solid\\\"></span>\\n                        <span class=\\\"icon icon-file-word-solid\\\"></span> -->\\n                        <span class=\\\"icon icon-expand-solid expand-fill-form\\\" (click)=\\\"enableFullScreen('editor')\\\"></span>\\n                        <button class=\\\"save-button-fill-form\\\" [disabled]=\\\"isSubmitting\\\" (click)=\\\"submitForm()\\\" *appShowAuthed=\\\"true\\\">\\n                            <span class=\\\"icon icon-save-regular\\\"></span>\\n                        </button>\\n\\n                        <button class=\\\"save-button-fill-form\\\" routerLink=\\\"/auth/login\\\" *appShowAuthed=\\\"false\\\">\\n                            <span class=\\\"icon icon-save-regular\\\"></span>\\n                        </button>\\n                        \\n                        <button class=\\\"button-delete-editor\\\" [disabled]=\\\"isDeleting\\\" *ngIf=\\\"updatingForm\\\" (click)=\\\"deleteForm()\\\">\\n                            <span class=\\\"icon icon-trash-alt-regular\\\"></span>\\n                        </button>\\n                    </div>\\n                    <div class=\\\"ql-editor\\\" id=\\\"editor\\\" #formBasedDocDiv>\\n                        {{generatedText}}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div id=\\\"comments\\\" class=\\\"content\\\">\\n        <!-- Si el orginalForm no está cargado no se inicia aún -->\\n        <app-comments [form]=\\\"originalForm\\\" class=\\\"comments\\\"\\n        *ngIf=\\\"originalForm.title !== ''\\\"></app-comments>\\n    </div>\\n</div>\"","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef, Renderer2 } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Form, FormService, UserService, CommonsService, ComponentInjectorService } from '../../core';\nimport { ToastrService } from 'ngx-toastr';\nimport * as screenfull from 'screenfull';\n\n@Component({\n  selector: 'app-fill-form',\n  templateUrl: './fill-form.component.html'\n})\nexport class FillFormComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('formAreaDiv') formAreaDiv: ElementRef;\n  @ViewChild('formBasedDocDiv') formBasedDocDiv: ElementRef;\n  @ViewChild('linkFormButton') linkFormButton: ElementRef;\n  @ViewChild('modal') modal: ElementRef;\n\n  public state: string;\n  public generatedText: any;\n  // Antes era fields: any. Estudiar si se puede usar authorForm fields\n  public fields: Array<any> = [];\n  public isDeleting = false;\n  public form: Form = new Form();\n  public originalForm: Form = new Form();\n  public errors: Object = {};\n  public isSubmitting = false;\n  public updatingForm = false;\n\n\n  constructor(\n    private formsService: FormService,\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(\n      data => {\n        const form: Form = data.form;\n\n        this.form = form;\n        this.fields = form.fields;\n        this.generatedText = form.text;\n        this.state = form.type === 'Created' ? 'newUser' : 'editUser';\n        if (form.type === 'Created') {\n          this.form.originalSlug = form.slug;\n          this.updatingForm = false;\n        } else {\n          this.updatingForm = true;\n        }\n      }\n    );\n    this.formsService.get(this.form.originalSlug).subscribe(\n      originalForm => {\n        this.originalForm = originalForm;\n      } );\n  }\n\n  ngAfterViewInit() {\n    this.setDivHeight();\n    window.addEventListener('resize', this.setDivHeight);\n        // Force click so it can update the value\n    setTimeout( () => { this.formAreaDiv.nativeElement.click(); }, 10);\n    if (this.form.indications !== '' && this.state === 'newUser') {\n      this.toggleModal();\n    }\n  }\n\n  generateText() {\n    this.formBasedDocDiv.nativeElement.innerHTML = '';\n    this.generatedText = this.form.text;\n    // Save user form settings\n    const newFieldsToSave = [];\n\n    for (const field of this.fields) {\n      // TEXT\n      if (field['type'] === 'iText') {\n        const id = '#' + field['referenceNumber'];\n        const regexp = new RegExp(field['referenceNumber'], 'g');\n        const focused = this.formAreaDiv.nativeElement.querySelector(id) === document.activeElement;\n        let valueToInsert: any;\n        if (focused) {\n          valueToInsert = '<mark id=\"focused\">' + this.formAreaDiv.nativeElement.querySelector(id).value + '</mark>';\n        } else {\n         valueToInsert = '<mark>' + this.formAreaDiv.nativeElement.querySelector(id).value + '</mark>';\n        }\n        this.generatedText = this.generatedText.replace(regexp, valueToInsert);\n        // Save user form settings\n        field['value'] = this.formAreaDiv.nativeElement.querySelector(id).value;\n      }\n      // DATE\n      // if (field['type'] === 'iDate') {\n      //   const id = '#' + field['referenceNumber'];\n      //   const regexp = new RegExp(field['referenceNumber'], 'g');\n      //   const valueToInsert = '<mark>' + this.formAreaDiv.nativeElement.querySelector(id).value + '</mark>';\n      //   this.generatedText = this.generatedText.replace(regexp, valueToInsert);\n      //   // Save user form settings\n      //   field['value'] = this.formAreaDiv.nativeElement.querySelector(id).value;\n      // }\n      // RADIO A\n      if (field['type'] === 'iRadioA') {\n        const radios = this.formAreaDiv.nativeElement.querySelectorAll('.' + field.referenceNumber);\n        // We check the radio button selected and save the value in a variable\n        for (let i = 0, length = radios.length; i < length; i++) {\n          if (radios[i].checked) {\n            const regexp = new RegExp(field['referenceNumber'], 'g');\n            const focused = radios[i] === document.activeElement;\n            let valueToInsert: any;\n            if (focused) {\n              valueToInsert = '<mark id=\"focused\">' + [radios[i].value] + '</mark>';\n            } else {\n             valueToInsert = '<mark>' + [radios[i].value] + '</mark>';\n            }\n            this.generatedText = this.generatedText.replace(regexp, valueToInsert);\n            field['value'] = radios[i].value;\n            // only one radio can be logically checked, don't check the rest\n            break;\n          }\n        }\n      }\n      // RADIO B\n      if (field['type'] === 'iRadioB') {\n        const radios = this.formAreaDiv.nativeElement.querySelectorAll('.' + field.referenceNumber);\n        // We check the radio button selected and save the value in a variable\n        for (let i = 0, length = radios.length; i < length; i++) {\n          if (radios[i].checked) {\n            const regexp = new RegExp(field['referenceNumber'], 'g');\n            const focused = radios[i] === document.activeElement;\n            let valueToInsert: any;\n            if (focused) {\n              valueToInsert = '<mark id=\"focused\">' + [radios[i].value] + '</mark>';\n            } else {\n             valueToInsert = '<mark>' + [radios[i].value] + '</mark>';\n            }\n            this.generatedText = this.generatedText.replace(regexp, valueToInsert);\n            field.radios[i]['checked'] = true;\n            // only one radio can be logically checked, don't check the rest\n          } else {\n            field.radios[i]['checked'] = false;\n          }\n        }\n      }\n      // RADIO C\n      if (field['type'] === 'iRadioC') {\n        const radios = this.formAreaDiv.nativeElement.querySelectorAll('.' + field.referenceNumber);\n        // We check the radio button selected and save the value in a variable\n        for (let i = 0, length = radios.length; i < length; i++) {\n          field.radios[i]['data-contentToExport'] = radios[i].getAttribute('data-contentToExport');\n          if (radios[i].checked) {\n            const regexp = new RegExp(field['referenceNumber'], 'g');\n            const focused = radios[i] === document.activeElement;\n            let valueToInsert: any;\n            if (focused) {\n              valueToInsert = '<mark id=\"focused\">' + [radios[i].getAttribute('data-texto')] + '</mark>';\n            } else {\n             valueToInsert = '<mark>' + [radios[i].getAttribute('data-texto')] + '</mark>';\n            }\n            this.generatedText = this.generatedText.replace(regexp, valueToInsert);\n            field.radios[i]['checked'] = true;\n          } else {\n            field.radios[i]['checked'] = false;\n          }\n        }\n      }\n      // Save user form settings\n      newFieldsToSave.push(field);\n    }\n    // Save user form settings\n    this.form.fields = newFieldsToSave;\n    this.formBasedDocDiv.nativeElement.insertAdjacentHTML('beforeend', this.generatedText);\n    const focusedElement = document.getElementById('focused');\n    if (focusedElement) {\n      focusedElement.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n\n  submitForm() {\n    // Saves author Form\n    this.generateText();\n    this.isSubmitting = true;\n    this.form.type = 'Filled';\n    // post the changes\n    this.formsService\n    .save(this.form)\n    .subscribe(\n      form => {\n        this.toastr.success('Has been created', form.title, {\n          positionClass: 'toast-bottom-right',\n          progressBar: true,\n          progressAnimation: 'decreasing'\n        });\n        this.router.navigateByUrl('/fill-form/edit/' + form.slug);\n        },\n\n      err => {\n        this.errors = err;\n        this.isSubmitting = false;\n      }\n    );\n  }\n\n  deleteForm() {\n    this.isDeleting = true;\n\n    this.formsService.destroy(this.form.slug)\n      .subscribe(\n        success => {\n          this.toastr.success('Has been deleted', this.form.title, {\n            positionClass: 'toast-bottom-right',\n            progressBar: true,\n            progressAnimation: 'decreasing'\n          });\n          this.router.navigateByUrl('/');\n        }\n      );\n  }\n\n  // UTILITY\n  setDivHeight() {\n    if (window.innerWidth > 885) {\n      if ((document.querySelector('#form-creator') as HTMLElement) !== null) {\n        const newHeight = window.innerHeight - (document.querySelector('#form-creator') as HTMLElement).offsetTop + 'px';\n        // const toolBarOffsetTop = (document.querySelector('.ql-toolbar') as HTMLElement).offsetTop;\n        // const toolBarOffsetHeight = (document.querySelector('.ql-toolbar') as HTMLElement).offsetHeight;\n        // const newHeightForEditor = window.innerHeight - (toolBarOffsetTop + toolBarOffsetHeight) + 'px';\n\n        (document.querySelector('#form-creator') as HTMLElement).style.height = newHeight;\n        (document.querySelector('#editor-container') as HTMLElement).style.height = newHeight;\n      }\n    }\n  }\n\n  topMenuNav(e: any) {\n    e.preventDefault();\n    const menuLinks: NodeListOf<HTMLElement> = document.querySelectorAll('.sub-menu-button') as NodeListOf<HTMLElement>;\n    const contentSection: HTMLElement = document.querySelector('.container') as HTMLElement;\n    const contentDivs: NodeListOf<HTMLElement> = document.querySelectorAll('.content') as NodeListOf<HTMLElement>;\n    if (e.target.tagName === 'A') {\n      if (!e.target.classList.contains('current')) {\n            // Remove class current from menu buttons\n            menuLinks.forEach((button) => {\n                button.parentElement.classList.remove('current');\n            });\n            e.target.parentElement.classList.add('current');\n            const target = e.target.getAttribute('href');\n            contentSection.classList.add('animation-outro');\n            contentSection.classList.remove('animation-intro');\n            setTimeout(function() {\n                contentDivs.forEach((div) => {\n                    if (div.id === target) {\n                        div.style.display = 'flex';\n                    } else {\n                        div.style.display = 'none';\n                    }\n                });\n                contentSection.classList.add('animation-intro');\n                contentSection.classList.remove('animation-outro');\n            }, 400);\n        }\n    }\n  }\n\n  toggleModal() {\n    this.modal.nativeElement.classList.toggle('show-modal');\n  }\n\n  enableFullScreen(id: string) {\n    const el = document.getElementById(id);\n    if (screenfull && screenfull.enabled) {\n      screenfull.request(el);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../shared';\n\nimport { FillFormRoutingModule } from './fill-form-routing.module';\nimport { FillFormComponent } from './fill-form.component';\nimport { FillFormResolver } from './fill-form-resolver.service';\nimport { LikesButtonComponent } from './likes-button/likes-button.component';\n\n@NgModule({\n  declarations: [FillFormComponent, LikesButtonComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    FillFormRoutingModule\n  ],\n  providers: [\n    FillFormResolver\n  ]\n})\nexport class FillFormModule { }\n","module.exports = \"<div class=\\\"likes\\\" *appShowAuthed=\\\"false\\\">\\n    <span class=\\\"icon icon-like-button\\\"></span>\\n    <span>&emsp; {{ form.likesCount }}</span>\\n</div>\\n<div class=\\\"likes\\\" *appShowAuthed=\\\"true\\\">\\n    <span class=\\\"icon icon-like-button like-form-button\\\" (click)=\\\"disLikeForm()\\\" *ngIf=\\\"form.liked\\\"></span>\\n    <span class=\\\"icon icon-thumbs-up-regular like-form-button\\\" (click)=\\\"likeForm()\\\" *ngIf=\\\"!form.liked\\\"></span>\\n    <span>&emsp; {{ form.likesCount }}</span>\\n</div>\\n<div class=\\\"views\\\">\\n    <span class=\\\"icon icon-eye-solid\\\"></span>\\n    <span> &emsp; {{ form.viewsCount }}</span>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Form, FormService, UserService, User } from '../../../core';\n\n@Component({\n  selector: 'app-likes-button',\n  templateUrl: './likes-button.component.html'\n})\nexport class LikesButtonComponent implements OnInit {\n\n  @Input() form: Form;\n  constructor(\n    private formsService: FormService,\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {}\n\n  likeForm() {\n    this.form.liked = true;\n    this.form.likesCount += 1;\n    this.formsService.like(this.form.slug).subscribe(\n      form => {\n        this.form.liked = true;\n      }\n    );\n  }\n\n  disLikeForm() {\n    this.form.liked = false;\n    this.form.likesCount -= 1;\n    this.formsService.disLike(this.form.slug).subscribe(\n      data => {\n        this.form.liked = false;\n      }\n    );\n  }\n\n}\n"],"sourceRoot":""}