import { Injectable } from '@angular/core';
import { CommonsService } from '../../../../core';
import * as FormBasedDocsApi from '../../../../../assets/js/wodotexteditor/localfileeditor.js';
@Injectable()
export class DocumentCreatorService {

  public defaultUri = 'data:application/vnd.oasis.opendocument.text;base64,';

  public originalDocumentBodyClone: any;
  public currentDocumentBodyClone: any;

  constructor(
    private commonsService: CommonsService,
  ) { }

  init() {
    this.commonsService.toggleSpinner();
    this.createEditorFromURI('fillForm', 'editorContainer', this.defaultUri);
      setTimeout(() => {
        this.resizeDocumentContainer();
        window.addEventListener('resize', this.resizeDocumentContainer);
        this.originalDocumentBodyClone = document.getElementsByTagName('office:text')[0].cloneNode(true);
        this.commonsService.toggleSpinner();
      }, 5000);
  }

  createEditorFromURI(formType: string, idOfContainer: string = 'editorContainer', dataURI: string) {
    const byteString = atob(dataURI.split(',')[1]);
    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
    const ab = new ArrayBuffer(byteString.length);
    const ia = new Uint8Array(ab);
    for (let i = 0; i < byteString.length; i++) {
        ia[i] = byteString.charCodeAt(i);
    }
    const blob = new Blob([ab], {type: mimeString});
    const url = URL.createObjectURL(blob);
    window['DOCUMENTOURL'] = url;
    FormBasedDocsApi.createEditor(formType, idOfContainer);
  }

  getEditorSession() {
    return FormBasedDocsApi.getEditorSession();
  }

  resizeDocumentContainer() {
    FormBasedDocsApi.documentToFitScreen();
  }

  buildDocument(steps: any) {
    this.currentDocumentBodyClone = this.originalDocumentBodyClone.cloneNode(true);
    // 1.- Change doc structure
    this.structuralChanges(steps);
    // 2.- Change values
    // this.replacements(steps);
  }
  /************************/
  /* CHANGE DOC STRUCTURE */
  /************************/
  structuralChanges(steps: any) {
    steps.forEach((step: any) => {
      if (step.type === 'iRadioC') {
        this.buildForRadioC(step);
      } else if (step.type === 'iCheckbox') {
        this.buildForCheckbox(step);
      }
    });
    document.getElementsByTagName('office:text')[0].parentElement.replaceChild(
      this.currentDocumentBodyClone.cloneNode(true), document.getElementsByTagName('office:text')[0]
    );
  }

  buildForRadioC(step:any) {
    const elementContainingWord = this.findword(step.wordToReplace);
    let replacement: string;
    step.radios.forEach((radio) =>{
      if (radio.checked) {
        replacement = radio.replacement;
      }
    });
    // Case where we have just one paragraph with the wordToReplace
    if (elementContainingWord.children.length === 1) {
      elementContainingWord.firstChild.innerHTML = replacement;
      // console.dir(elementContainingWord);
    }
  }

  buildForCheckbox(step: any) {
    console.log(step);
  }
  /*****************************/
  /*END OF CHANGE DOC STRUCTURE*/
  /*****************************/
  

  replacements(steps: any) {
    steps.forEach((step: any) => {
      if (step.type === 'iText') {
        const elementContainingWord = this.findword(step.wordToReplace);
        const regexp = new RegExp(step.wordToReplace, 'g');
        elementContainingWord.innerHTML =
          elementContainingWord.innerHTML
          .replace(
          regexp,
          `<span class="highlight ${step.isFocused ? 'focused' : ''}" data-identifier="${step.wordToReplace}">${step.replacement}</span>`);
      }
    });
    document.getElementsByTagName('office:text')[0].parentElement.replaceChild(
      this.currentDocumentBodyClone.cloneNode(true), document.getElementsByTagName('office:text')[0]
    );
  }

  findword(wordToReplace: string) {
    // USE ARRAY FOR ALL VALUES
    const children = this.currentDocumentBodyClone.childNodes;
    for (let i = 0; i < children.length; i++) {
      if (!this.elementIsExcluded(children[i])) {
        if (children[i].innerHTML.includes(wordToReplace)) {
          return children[i];
        }
      }
    }
  }

  elementIsExcluded(element: any) {
    const excludedElements = [
        'office:text',
        'text:sequence-decls',
        'text:sequence-decl',
        'draw:frame',
        'draw:image',
        'office:annotation',
        'office:annotation-end',
        'dc:creator',
        'dc:date'
    ];
    return excludedElements.includes(element.nodeName);
  }
}
