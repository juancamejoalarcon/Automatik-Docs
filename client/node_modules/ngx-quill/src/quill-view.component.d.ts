import { QuillConfig, QuillModules } from './quill-editor.interfaces';
import { AfterViewInit, ElementRef, OnChanges, Renderer2, SimpleChanges, NgZone } from '@angular/core';
import { CustomOption } from './quill-editor.component';
import * as ɵngcc0 from '@angular/core';
export declare class QuillViewComponent implements AfterViewInit, OnChanges {
    private platformId;
    private config;
    private renderer;
    private elementRef;
    private zone;
    quillEditor: any;
    editorElem: HTMLElement | undefined;
    format?: 'object' | 'html' | 'text' | 'json';
    theme?: string;
    modules?: QuillModules;
    debug?: 'warn' | 'log' | 'error' | false;
    formats?: string[] | null;
    strict: boolean;
    content: any;
    customOptions: CustomOption[];
    preserveWhitespace: boolean;
    constructor(platformId: any, config: QuillConfig, renderer: Renderer2, elementRef: ElementRef, zone: NgZone);
    valueSetter: (quillEditor: any, value: any) => any;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<QuillViewComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<QuillViewComponent, "quill-view", never, { "strict": "strict"; "customOptions": "customOptions"; "preserveWhitespace": "preserveWhitespace"; "format": "format"; "theme": "theme"; "modules": "modules"; "debug": "debug"; "formats": "formats"; "content": "content"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVpbGwtdmlldy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicXVpbGwtdmlldy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1aWxsQ29uZmlnLCBRdWlsbE1vZHVsZXMgfSBmcm9tICcuL3F1aWxsLWVkaXRvci5pbnRlcmZhY2VzJztcbmltcG9ydCB7IEFmdGVyVmlld0luaXQsIEVsZW1lbnRSZWYsIE9uQ2hhbmdlcywgUmVuZGVyZXIyLCBTaW1wbGVDaGFuZ2VzLCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEN1c3RvbU9wdGlvbiB9IGZyb20gJy4vcXVpbGwtZWRpdG9yLmNvbXBvbmVudCc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBRdWlsbFZpZXdDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgcGxhdGZvcm1JZDtcbiAgICBwcml2YXRlIGNvbmZpZztcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgZWxlbWVudFJlZjtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgcXVpbGxFZGl0b3I6IGFueTtcbiAgICBlZGl0b3JFbGVtOiBIVE1MRWxlbWVudCB8IHVuZGVmaW5lZDtcbiAgICBmb3JtYXQ/OiAnb2JqZWN0JyB8ICdodG1sJyB8ICd0ZXh0JyB8ICdqc29uJztcbiAgICB0aGVtZT86IHN0cmluZztcbiAgICBtb2R1bGVzPzogUXVpbGxNb2R1bGVzO1xuICAgIGRlYnVnPzogJ3dhcm4nIHwgJ2xvZycgfCAnZXJyb3InIHwgZmFsc2U7XG4gICAgZm9ybWF0cz86IHN0cmluZ1tdIHwgbnVsbDtcbiAgICBzdHJpY3Q6IGJvb2xlYW47XG4gICAgY29udGVudDogYW55O1xuICAgIGN1c3RvbU9wdGlvbnM6IEN1c3RvbU9wdGlvbltdO1xuICAgIHByZXNlcnZlV2hpdGVzcGFjZTogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihwbGF0Zm9ybUlkOiBhbnksIGNvbmZpZzogUXVpbGxDb25maWcsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHpvbmU6IE5nWm9uZSk7XG4gICAgdmFsdWVTZXR0ZXI6IChxdWlsbEVkaXRvcjogYW55LCB2YWx1ZTogYW55KSA9PiBhbnk7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG59XG4iXX0=